// CreatorID=MSFT	CreatorRev=4.0.0
// FileLength=33100	FileChkSum=0xf7

DefinitionBlock("SSDT0000.bin", "SSDT", 0x02, "NVIDIA", "AP20EDK2", 0x00000003)
{
    Scope(\_SB_)
    {
        Scope(GPIO)
        {
            OperationRegion(GPWR, GeneralPurposeIO, Zero, One)
        }
        Scope(\_SB_.I2C5)
        {
            OperationRegion(LDOP, GenericSerialBus, Zero, 0x100)
        }
        PowerResource(PRS1, 0x5, 0x0)
        {
            Name(_DEP, Package(0x2)
            {
                \_SB_.GPIO,
                \_SB_.I2C5
            })
            Name(S1BB, Buffer(0x22)
            {
            })
            CreateByteField(S1BB, 0x2, LDOR)
            Name(GPD7, Buffer(0x25)
            {
	0x8c, 0x20, 0x00, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x17, 0x00, 0x00, 0x19, 0x00, 0x23, 0x00, 0x00, 0x00, 0x1f,
	0x00, 0x5c, 0x5f, 0x53, 0x42, 0x2e, 0x47, 0x50, 0x49, 0x4f, 0x00, 0x79,
	0x00
            })
            Field(\_SB_.GPIO.GPWR, ByteAcc, NoLock, Preserve)
            {
                Connection(\_SB_.PRS1.GPD7),
                ESD1, 1
            }
            Name(PRCN, Buffer(0x20)
            {
	0x8e, 0x1b, 0x00, 0x01, 0x00, 0x01, 0x02, 0x00, 0x00, 0x01, 0x08, 0x00,
	0x80, 0x1a, 0x06, 0x00, 0x2d, 0x00, 0x05, 0x05, 0x5c, 0x5f, 0x53, 0x42,
	0x2e, 0x49, 0x32, 0x43, 0x35, 0x00, 0x79, 0x00
            })
            Field(\_SB_.I2C5.LDOP, BufferAcc, NoLock, Preserve)
            {
                Connection(\_SB_.PRS1.PRCN),
                AccessAs(BufferAcc, 0x6),
                Offset(0x32),
                LDO5, 8
            }
            Method(_STA, 0x0, NotSerialized)
            {
                If(!(\_SB_.GPIO.AVBL == Zero))
                {
                    Return(^ESD1)
                }
                Else
                {
                    Return(Zero)
                }
            }
            Method(_ON_, 0x0, NotSerialized)
            {
                ^ESD1 = One
                If(\_SB_.I2C5.AVBL)
                {
                    S1BB = ^LDO5
                    LDOR = LDOR | One
                    ^LDO5 = S1BB
                }
            }
            Method(_OFF, 0x0, NotSerialized)
            {
                ^ESD1 = Zero
                If(\_SB_.I2C5.AVBL)
                {
                    S1BB = ^LDO5
                    LDOR = LDOR & 0xfe
                    ^LDO5 = S1BB
                }
            }
        }
        PowerResource(PRMU, 0x5, 0x0)
        {
            Name(_DEP, Package(0x1)
            {
                \_SB_.GPIO
            })
            Name(GPD7, Buffer(0x25)
            {
	0x8c, 0x20, 0x00, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x17, 0x00, 0x00, 0x19, 0x00, 0x23, 0x00, 0x00, 0x00, 0x68,
	0x00, 0x5c, 0x5f, 0x53, 0x42, 0x2e, 0x47, 0x50, 0x49, 0x4f, 0x00, 0x79,
	0x00
            })
            Field(\_SB_.GPIO.GPWR, ByteAcc, NoLock, Preserve)
            {
                Connection(\_SB_.PRMU.GPD7),
                ESD1, 1
            }
            Name(PWCN, One)
            Method(_STA, 0x0, NotSerialized)
            {
                If(!(\_SB_.BDID < 0x3))
                {
                    If(!(\_SB_.GPIO.AVBL == Zero))
                    {
                        Return(^ESD1)
                    }
                    Else
                    {
                        Return(Zero)
                    }
                }
                Else
                {
                    Return(PWCN)
                }
            }
            Method(_ON_, 0x0, NotSerialized)
            {
                If(!(\_SB_.BDID < 0x3))
                {
                    ^ESD1 = One
                    Sleep(0x64)
                }
                Else
                {
                    PWCN = One
                }
            }
            Method(_OFF, 0x0, NotSerialized)
            {
                If(!(\_SB_.BDID < 0x3))
                {
                    ^ESD1 = Zero
                }
                Else
                {
                    PWCN = Zero
                }
            }
        }
        PowerResource(PRTU, 0x5, 0x0)
        {
            Name(_DEP, Package(0x1)
            {
                \_SB_.GPIO
            })
            Name(GPD1, Buffer(0x25)
            {
	0x8c, 0x20, 0x00, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x17, 0x00, 0x00, 0x19, 0x00, 0x23, 0x00, 0x00, 0x00, 0x3e,
	0x00, 0x5c, 0x5f, 0x53, 0x42, 0x2e, 0x47, 0x50, 0x49, 0x4f, 0x00, 0x79,
	0x00
            })
            Field(\_SB_.GPIO.GPWR, ByteAcc, NoLock, Preserve)
            {
                Connection(\_SB_.PRTU.GPD1),
                ESD1, 1
            }
            Name(GPD2, Buffer(0x25)
            {
	0x8c, 0x20, 0x00, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x17, 0x00, 0x00, 0x19, 0x00, 0x23, 0x00, 0x00, 0x00, 0xef,
	0x00, 0x5c, 0x5f, 0x53, 0x42, 0x2e, 0x47, 0x50, 0x49, 0x4f, 0x00, 0x79,
	0x00
            })
            Field(\_SB_.GPIO.GPWR, ByteAcc, NoLock, Preserve)
            {
                Connection(\_SB_.PRTU.GPD2),
                ESD2, 1
            }
            Name(PWCN, One)
            Method(_STA, 0x0, NotSerialized)
            {
                Return(PWCN)
            }
            Method(_ON_, 0x0, NotSerialized)
            {
                PWCN = One
            }
            Method(_OFF, 0x0, NotSerialized)
            {
                PWCN = Zero
            }
        }
        Scope(GPIO)
        {
            Name(EBUF, Buffer(0x6b)
            {
	0x8c, 0x20, 0x00, 0x01, 0x00, 0x01, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x17, 0x00, 0x00, 0x19, 0x00, 0x23, 0x00, 0x00, 0x00, 0x6f,
	0x00, 0x5c, 0x5f, 0x53, 0x42, 0x2e, 0x47, 0x50, 0x49, 0x4f, 0x00, 0x8c,
	0x20, 0x00, 0x01, 0x00, 0x01, 0x00, 0x19, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x17, 0x00, 0x00, 0x19, 0x00, 0x23, 0x00, 0x00, 0x00, 0x48, 0x00,
	0x5c, 0x5f, 0x53, 0x42, 0x2e, 0x47, 0x50, 0x49, 0x4f, 0x00, 0x8c, 0x20,
	0x00, 0x01, 0x00, 0x01, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x17, 0x00, 0x00, 0x19, 0x00, 0x23, 0x00, 0x00, 0x00, 0x90, 0x00, 0x5c,
	0x5f, 0x53, 0x42, 0x2e, 0x47, 0x50, 0x49, 0x4f, 0x00, 0x79, 0x00
            })
            Name(BUF3, Buffer(0xb1)
            {
	0x8c, 0x20, 0x00, 0x01, 0x00, 0x01, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x17, 0x00, 0x00, 0x19, 0x00, 0x23, 0x00, 0x00, 0x00, 0x6f,
	0x00, 0x5c, 0x5f, 0x53, 0x42, 0x2e, 0x47, 0x50, 0x49, 0x4f, 0x00, 0x8c,
	0x20, 0x00, 0x01, 0x00, 0x01, 0x00, 0x19, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x17, 0x00, 0x00, 0x19, 0x00, 0x23, 0x00, 0x00, 0x00, 0x48, 0x00,
	0x5c, 0x5f, 0x53, 0x42, 0x2e, 0x47, 0x50, 0x49, 0x4f, 0x00, 0x8c, 0x20,
	0x00, 0x01, 0x00, 0x01, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x17, 0x00, 0x00, 0x19, 0x00, 0x23, 0x00, 0x00, 0x00, 0x59, 0x00, 0x5c,
	0x5f, 0x53, 0x42, 0x2e, 0x47, 0x50, 0x49, 0x4f, 0x00, 0x8c, 0x20, 0x00,
	0x01, 0x00, 0x01, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x17,
	0x00, 0x00, 0x19, 0x00, 0x23, 0x00, 0x00, 0x00, 0xeb, 0x00, 0x5c, 0x5f,
	0x53, 0x42, 0x2e, 0x47, 0x50, 0x49, 0x4f, 0x00, 0x8c, 0x20, 0x00, 0x01,
	0x00, 0x01, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x17, 0x00,
	0x00, 0x19, 0x00, 0x23, 0x00, 0x00, 0x00, 0x90, 0x00, 0x5c, 0x5f, 0x53,
	0x42, 0x2e, 0x47, 0x50, 0x49, 0x4f, 0x00, 0x79, 0x00
            })
            Method(_AEI, 0x0, NotSerialized)
            {
                If(\_SB_.BDID < 0x3)
                {
                    Return(EBUF)
                }
                Else
                {
                    Return(BUF3)
                }
            }
            Method(_E59, 0x0, Serialized)
            {
                If(!(\_SB_.BDID < 0x3))
                {
                    Local0 = \_SB_.GPIO.LIDS
                    If(Local0 == Zero)
                    {
                        \_SB_.LID_.LIDB = One
                    }
                    Else
                    {
                        \_SB_.LID_.LIDB = Zero
                    }
                    Notify(\_SB_.LID_, 0x80)
                }
            }
            OperationRegion(PMIO, GeneralPurposeIO, Zero, One)
            Field(PMIO, ByteAcc, NoLock, Preserve)
            {
                Connection(\_SB_.LID_.GMOD),
                LIDS, 1
            }
            Name(DDBH, Zero)
            Name(HRVX, 0x1001)
            Name(HIDX, "MSHW0004")
            Name(SUBX, "MSAY0001")
            Name(SHRV, 0x1001)
            Method(LATB, 0x0, NotSerialized)
            {
                If(DDBH == Zero)
                {
                    Local0 = (LoadTable("WDSA", "MSHWDS", "ACTABL", "\\", "", Zero))
                    DDBH = (ToInteger(Local0, ))
                    If(!(DDBH == Zero))
                    {
                        Notify(\_SB_.I2C1.ACMU, One)
                    }
                }
            }
            Method(UATB, 0x0, NotSerialized)
            {
                If(!(DDBH == Zero))
                {
                    Notify(\_SB_.I2C1.ACMU, One)
                    Unload(DDBH)
                    DDBH = Zero
                }
            }
            Method(_E90, 0x0, Serialized)
            {
                \_SB_.I2C1.SNMU.AIRB = \_SB_.GPIO.AIRL
                If(\_SB_.I2C1.SNMU.AIRB == One)
                {
                    \_SB_.I2C1.BUFF = \_SB_.I2C1.AREV
                    HRVX = \_SB_.I2C1.DTD_
                    \_SB_.I2C1.BUFF = \_SB_.I2C1.ASUB
                    SUBX = \_SB_.I2C1.DBF_
                    HIDX = "MSHW0004"
                    LATB()
                }
                Else
                {
                    UATB()
                }
            }
            OperationRegion(AIOP, GeneralPurposeIO, Zero, One)
            Field(AIOP, ByteAcc, NoLock, Preserve)
            {
                Connection(\_SB_.I2C1.SNMU.GPIA),
                AIRL, 1
            }
            Method(_E6F, 0x0, NotSerialized)
            {
                Notify(\_SB_.GFXC, 0x81)
            }
            Name(GPK_, Package(0x1)
            {
                0x6f
            })
        }
        Device(BTH0)
        {
            Method(_HID, 0x0, NotSerialized)
            {
                Return("NVDAF000")
            }
            Method(_CRS, 0x0, NotSerialized)
            {
                Name(UBUF, Buffer(0x68)
                {
	0x8e, 0x1d, 0x00, 0x01, 0x00, 0x03, 0x02, 0x35, 0x00, 0x01, 0x0a, 0x00,
	0x00, 0xc2, 0x01, 0x00, 0x20, 0x00, 0x20, 0x00, 0x00, 0xfc, 0x5c, 0x5f,
	0x53, 0x42, 0x2e, 0x55, 0x41, 0x52, 0x33, 0x00, 0x8c, 0x20, 0x00, 0x01,
	0x00, 0x01, 0x00, 0x13, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x17, 0x00,
	0x00, 0x19, 0x00, 0x23, 0x00, 0x00, 0x00, 0xa6, 0x00, 0x5c, 0x5f, 0x53,
	0x42, 0x2e, 0x47, 0x50, 0x49, 0x4f, 0x00, 0x8c, 0x20, 0x00, 0x01, 0x01,
	0x01, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x17, 0x00, 0x00,
	0x19, 0x00, 0x23, 0x00, 0x00, 0x00, 0x19, 0x00, 0x5c, 0x5f, 0x53, 0x42,
	0x2e, 0x47, 0x50, 0x49, 0x4f, 0x00, 0x79, 0x00
                })
                Return(UBUF)
            }
        }
        Device(PMUD)
        {
            Method(_HID, 0x0, NotSerialized)
            {
                Return("NVDAF241")
            }
            Method(GPEE, 0x0, NotSerialized)
            {
                Return(Zero)
            }
            Name(_CRS, Buffer(0x47)
            {
	0x8e, 0x1b, 0x00, 0x01, 0x00, 0x01, 0x02, 0x00, 0x00, 0x01, 0x08, 0x00,
	0x80, 0x1a, 0x06, 0x00, 0x2d, 0x00, 0x41, 0xf2, 0x5c, 0x5f, 0x53, 0x42,
	0x2e, 0x49, 0x32, 0x43, 0x35, 0x00, 0x8e, 0x1b, 0x00, 0x01, 0x00, 0x01,
	0x02, 0x00, 0x00, 0x01, 0x08, 0x00, 0x80, 0x1a, 0x06, 0x00, 0x60, 0x00,
	0x41, 0xf2, 0x5c, 0x5f, 0x53, 0x42, 0x2e, 0x49, 0x32, 0x43, 0x35, 0x00,
	0x89, 0x06, 0x00, 0x05, 0x01, 0x76, 0x00, 0x00, 0x00, 0x79, 0x00
            })
            Name(_HRV, Zero)
            Method(_INI, 0x0, NotSerialized)
            {
                ^_HRV = Zero
            }
            Name(_DEP, Package(0x1)
            {
                \_SB_.I2C5
            })
        }
        Scope(GPIO)
        {
            Device(TOUA)
            {
                Name(_HID, "MSHW0002")
                Name(_CID, "PNP0C50")
                Name(_UID, 0x3)
                Name(_PR0, Package(0x1)
                {
                    PRTU
                })
                Name(_DEP, Package(0x1)
                {
                    \_SB_.GPIO
                })
                Method(_CRS, 0x0, NotSerialized)
                {
                    Name(EBUF, Buffer(0x41)
                    {
	0x8e, 0x19, 0x00, 0x01, 0x00, 0x01, 0x02, 0x00, 0x00, 0x01, 0x06, 0x00,
	0x80, 0x1a, 0x06, 0x00, 0x5b, 0x00, 0x5c, 0x5f, 0x53, 0x42, 0x2e, 0x49,
	0x32, 0x43, 0x32, 0x00, 0x8c, 0x20, 0x00, 0x01, 0x00, 0x01, 0x00, 0x0a,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x17, 0x00, 0x00, 0x19, 0x00, 0x23,
	0x00, 0x00, 0x00, 0x52, 0x00, 0x5c, 0x5f, 0x53, 0x42, 0x2e, 0x47, 0x50,
	0x49, 0x4f, 0x00, 0x79, 0x00
                    })
                    Return(EBUF)
                }
                Method(_DSM, 0x4, NotSerialized)
                {
                    If(Arg0 == (Buffer(0x10)
                    {
	0xf7, 0xf6, 0xdf, 0x3c, 0x67, 0x42, 0x55, 0x45, 0xad, 0x05, 0xb3, 0x0a,
	0x3d, 0x89, 0x38, 0xde
                    }))
                    {
                        If(Arg2 == Zero)
                        {
                            If(Arg1 == One)
                            {
                                Return(Buffer(One)
                                {
	0x03
                                })
                            }
                        }
                        If(Arg2 == One)
                        {
                            Return(Zero)
                        }
                    }
                    Else
                    {
                        Return(Buffer(One)
                        {
	0x00
                        })
                    }
                }
            }
            Device(TEV2)
            {
                Name(_HID, "MSHW0003")
                Method(_STA, 0x0, NotSerialized)
                {
                    Return(0xf)
                }
                Name(EBUF, Buffer(0x136)
                {
	0x8c, 0x20, 0x00, 0x01, 0x00, 0x01, 0x00, 0x19, 0x00, 0x00, 0x00, 0x00,
	0xc4, 0x09, 0x17, 0x00, 0x00, 0x19, 0x00, 0x23, 0x00, 0x00, 0x00, 0xa8,
	0x00, 0x5c, 0x5f, 0x53, 0x42, 0x2e, 0x47, 0x50, 0x49, 0x4f, 0x00, 0x8c,
	0x20, 0x00, 0x01, 0x00, 0x01, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x17, 0x00, 0x00, 0x19, 0x00, 0x23, 0x00, 0x00, 0x00, 0x95, 0x00,
	0x5c, 0x5f, 0x53, 0x42, 0x2e, 0x47, 0x50, 0x49, 0x4f, 0x00, 0x8c, 0x20,
	0x00, 0x01, 0x00, 0x01, 0x00, 0x0d, 0x00, 0x01, 0x00, 0x00, 0xc4, 0x09,
	0x17, 0x00, 0x00, 0x19, 0x00, 0x23, 0x00, 0x00, 0x00, 0x96, 0x00, 0x5c,
	0x5f, 0x53, 0x42, 0x2e, 0x47, 0x50, 0x49, 0x4f, 0x00, 0x8c, 0x20, 0x00,
	0x01, 0x00, 0x01, 0x00, 0x0d, 0x00, 0x01, 0x00, 0x00, 0xc4, 0x09, 0x17,
	0x00, 0x00, 0x19, 0x00, 0x23, 0x00, 0x00, 0x00, 0x97, 0x00, 0x5c, 0x5f,
	0x53, 0x42, 0x2e, 0x47, 0x50, 0x49, 0x4f, 0x00, 0x8c, 0x20, 0x00, 0x01,
	0x01, 0x01, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x17, 0x00,
	0x00, 0x19, 0x00, 0x23, 0x00, 0x00, 0x00, 0xa8, 0x00, 0x5c, 0x5f, 0x53,
	0x42, 0x2e, 0x47, 0x50, 0x49, 0x4f, 0x00, 0x8c, 0x20, 0x00, 0x01, 0x01,
	0x01, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x17, 0x00, 0x00,
	0x19, 0x00, 0x23, 0x00, 0x00, 0x00, 0x95, 0x00, 0x5c, 0x5f, 0x53, 0x42,
	0x2e, 0x47, 0x50, 0x49, 0x4f, 0x00, 0x8c, 0x20, 0x00, 0x01, 0x01, 0x01,
	0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x17, 0x00, 0x00, 0x19,
	0x00, 0x23, 0x00, 0x00, 0x00, 0x96, 0x00, 0x5c, 0x5f, 0x53, 0x42, 0x2e,
	0x47, 0x50, 0x49, 0x4f, 0x00, 0x8c, 0x20, 0x00, 0x01, 0x01, 0x01, 0x00,
	0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x17, 0x00, 0x00, 0x19, 0x00,
	0x23, 0x00, 0x00, 0x00, 0x97, 0x00, 0x5c, 0x5f, 0x53, 0x42, 0x2e, 0x47,
	0x50, 0x49, 0x4f, 0x00, 0x8e, 0x19, 0x00, 0x01, 0x00, 0x01, 0x02, 0x00,
	0x00, 0x01, 0x06, 0x00, 0x80, 0x1a, 0x06, 0x00, 0x2d, 0x00, 0x5c, 0x5f,
	0x53, 0x42, 0x2e, 0x49, 0x32, 0x43, 0x32, 0x00, 0x79, 0x00
                })
                Name(BUF3, Buffer(0x136)
                {
	0x8c, 0x20, 0x00, 0x01, 0x00, 0x01, 0x00, 0x19, 0x00, 0x00, 0x00, 0x00,
	0xc4, 0x09, 0x17, 0x00, 0x00, 0x19, 0x00, 0x23, 0x00, 0x00, 0x00, 0xa8,
	0x00, 0x5c, 0x5f, 0x53, 0x42, 0x2e, 0x47, 0x50, 0x49, 0x4f, 0x00, 0x8c,
	0x20, 0x00, 0x01, 0x00, 0x01, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x17, 0x00, 0x00, 0x19, 0x00, 0x23, 0x00, 0x00, 0x00, 0x95, 0x00,
	0x5c, 0x5f, 0x53, 0x42, 0x2e, 0x47, 0x50, 0x49, 0x4f, 0x00, 0x8c, 0x20,
	0x00, 0x01, 0x00, 0x01, 0x00, 0x0d, 0x00, 0x01, 0x00, 0x00, 0xc4, 0x09,
	0x17, 0x00, 0x00, 0x19, 0x00, 0x23, 0x00, 0x00, 0x00, 0x97, 0x00, 0x5c,
	0x5f, 0x53, 0x42, 0x2e, 0x47, 0x50, 0x49, 0x4f, 0x00, 0x8c, 0x20, 0x00,
	0x01, 0x00, 0x01, 0x00, 0x0d, 0x00, 0x01, 0x00, 0x00, 0xc4, 0x09, 0x17,
	0x00, 0x00, 0x19, 0x00, 0x23, 0x00, 0x00, 0x00, 0x96, 0x00, 0x5c, 0x5f,
	0x53, 0x42, 0x2e, 0x47, 0x50, 0x49, 0x4f, 0x00, 0x8c, 0x20, 0x00, 0x01,
	0x01, 0x01, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x17, 0x00,
	0x00, 0x19, 0x00, 0x23, 0x00, 0x00, 0x00, 0xa8, 0x00, 0x5c, 0x5f, 0x53,
	0x42, 0x2e, 0x47, 0x50, 0x49, 0x4f, 0x00, 0x8c, 0x20, 0x00, 0x01, 0x01,
	0x01, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x17, 0x00, 0x00,
	0x19, 0x00, 0x23, 0x00, 0x00, 0x00, 0x95, 0x00, 0x5c, 0x5f, 0x53, 0x42,
	0x2e, 0x47, 0x50, 0x49, 0x4f, 0x00, 0x8c, 0x20, 0x00, 0x01, 0x01, 0x01,
	0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x17, 0x00, 0x00, 0x19,
	0x00, 0x23, 0x00, 0x00, 0x00, 0x97, 0x00, 0x5c, 0x5f, 0x53, 0x42, 0x2e,
	0x47, 0x50, 0x49, 0x4f, 0x00, 0x8c, 0x20, 0x00, 0x01, 0x01, 0x01, 0x00,
	0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x17, 0x00, 0x00, 0x19, 0x00,
	0x23, 0x00, 0x00, 0x00, 0x96, 0x00, 0x5c, 0x5f, 0x53, 0x42, 0x2e, 0x47,
	0x50, 0x49, 0x4f, 0x00, 0x8e, 0x19, 0x00, 0x01, 0x00, 0x01, 0x02, 0x00,
	0x00, 0x01, 0x06, 0x00, 0x80, 0x1a, 0x06, 0x00, 0x2d, 0x00, 0x5c, 0x5f,
	0x53, 0x42, 0x2e, 0x49, 0x32, 0x43, 0x32, 0x00, 0x79, 0x00
                })
                Method(_CRS, 0x0, NotSerialized)
                {
                    If(\_SB_.BDID < 0x3)
                    {
                        Return(EBUF)
                    }
                    Else
                    {
                        Return(BUF3)
                    }
                }
            }
            Device(WSLT)
            {
                Method(_HID, 0x0, NotSerialized)
                {
                    Return("MSHW0005")
                }
                Name(_CID, "PNP0C60")
                Method(_STA, 0x0, NotSerialized)
                {
                    Return(0xf)
                }
            }
            Device(WSAF)
            {
                Method(_HID, 0x0, NotSerialized)
                {
                    Return("MSHW0006")
                }
                Method(_STA, 0x0, NotSerialized)
                {
                    Return(0xf)
                }
            }
            Device(WBUT)
            {
                Method(_HID, 0x0, NotSerialized)
                {
                    Return("MSHW0007")
                }
                Name(_CID, "PNP0C40")
                Method(_STA, 0x0, NotSerialized)
                {
                    Return(0xf)
                }
            }
        }
        Scope(GFXC)
        {
            Name(EBUF, Buffer(0x1bb)
            {
	0x8e, 0x19, 0x00, 0x01, 0x00, 0x01, 0x02, 0x00, 0x00, 0x01, 0x06, 0x00,
	0xa0, 0x86, 0x01, 0x00, 0x50, 0x00, 0x5c, 0x5f, 0x53, 0x42, 0x2e, 0x49,
	0x32, 0x43, 0x34, 0x00, 0x8e, 0x19, 0x00, 0x01, 0x00, 0x01, 0x02, 0x00,
	0x00, 0x01, 0x06, 0x00, 0x80, 0x1a, 0x06, 0x00, 0x50, 0x00, 0x5c, 0x5f,
	0x53, 0x42, 0x2e, 0x49, 0x32, 0x43, 0x31, 0x00, 0x8e, 0x19, 0x00, 0x01,
	0x00, 0x01, 0x02, 0x00, 0x00, 0x01, 0x06, 0x00, 0x80, 0x1a, 0x06, 0x00,
	0x10, 0x00, 0x5c, 0x5f, 0x53, 0x42, 0x2e, 0x49, 0x32, 0x43, 0x33, 0x00,
	0x8e, 0x19, 0x00, 0x01, 0x00, 0x01, 0x02, 0x00, 0x00, 0x01, 0x06, 0x00,
	0x80, 0x1a, 0x06, 0x00, 0x72, 0x00, 0x5c, 0x5f, 0x53, 0x42, 0x2e, 0x49,
	0x32, 0x43, 0x33, 0x00, 0x8e, 0x19, 0x00, 0x01, 0x00, 0x01, 0x02, 0x00,
	0x00, 0x01, 0x06, 0x00, 0x80, 0x1a, 0x06, 0x00, 0x3a, 0x00, 0x5c, 0x5f,
	0x53, 0x42, 0x2e, 0x49, 0x32, 0x43, 0x34, 0x00, 0x8e, 0x19, 0x00, 0x01,
	0x00, 0x01, 0x02, 0x00, 0x00, 0x01, 0x06, 0x00, 0x80, 0x1a, 0x06, 0x00,
	0x3b, 0x00, 0x5c, 0x5f, 0x53, 0x42, 0x2e, 0x49, 0x32, 0x43, 0x34, 0x00,
	0x8e, 0x19, 0x00, 0x01, 0x00, 0x01, 0x02, 0x00, 0x00, 0x01, 0x06, 0x00,
	0xa0, 0x86, 0x01, 0x00, 0x30, 0x00, 0x5c, 0x5f, 0x53, 0x42, 0x2e, 0x49,
	0x32, 0x43, 0x34, 0x00, 0x8c, 0x20, 0x00, 0x01, 0x01, 0x01, 0x00, 0x03,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x17, 0x00, 0x00, 0x19, 0x00, 0x23,
	0x00, 0x00, 0x00, 0x0a, 0x00, 0x5c, 0x5f, 0x53, 0x42, 0x2e, 0x47, 0x50,
	0x49, 0x4f, 0x00, 0x8c, 0x20, 0x00, 0x01, 0x01, 0x01, 0x00, 0x03, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x17, 0x00, 0x00, 0x19, 0x00, 0x23, 0x00,
	0x00, 0x00, 0xe8, 0x00, 0x5c, 0x5f, 0x53, 0x42, 0x2e, 0x47, 0x50, 0x49,
	0x4f, 0x00, 0x8c, 0x20, 0x00, 0x01, 0x01, 0x01, 0x00, 0x03, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x17, 0x00, 0x00, 0x19, 0x00, 0x23, 0x00, 0x00,
	0x00, 0xea, 0x00, 0x5c, 0x5f, 0x53, 0x42, 0x2e, 0x47, 0x50, 0x49, 0x4f,
	0x00, 0x8c, 0x20, 0x00, 0x01, 0x01, 0x01, 0x00, 0x0b, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x17, 0x00, 0x00, 0x19, 0x00, 0x23, 0x00, 0x00, 0x00,
	0x38, 0x00, 0x5c, 0x5f, 0x53, 0x42, 0x2e, 0x47, 0x50, 0x49, 0x4f, 0x00,
	0x8c, 0x20, 0x00, 0x01, 0x01, 0x01, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x17, 0x00, 0x00, 0x19, 0x00, 0x23, 0x00, 0x00, 0x00, 0x6f,
	0x00, 0x5c, 0x5f, 0x53, 0x42, 0x2e, 0x47, 0x50, 0x49, 0x4f, 0x00, 0x8c,
	0x20, 0x00, 0x01, 0x01, 0x01, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x17, 0x00, 0x00, 0x19, 0x00, 0x23, 0x00, 0x00, 0x00, 0x8e, 0x00,
	0x5c, 0x5f, 0x53, 0x42, 0x2e, 0x47, 0x50, 0x49, 0x4f, 0x00, 0x8c, 0x20,
	0x00, 0x01, 0x01, 0x01, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x17, 0x00, 0x00, 0x19, 0x00, 0x23, 0x00, 0x00, 0x00, 0x8f, 0x00, 0x5c,
	0x5f, 0x53, 0x42, 0x2e, 0x47, 0x50, 0x49, 0x4f, 0x00, 0x79, 0x00
            })
            Method(CRSA, 0x0, NotSerialized)
            {
                Return(EBUF)
            }
            Name(DCBB, Buffer(0x2e)
            {
	0x51, 0x0c, 0x02, 0x04, 0xcb, 0xbd, 0xdc, 0x4e, 0x00, 0x00, 0x00, 0x00,
	0x13, 0x00, 0x02, 0x00, 0x02, 0x10, 0x00, 0x00, 0x50, 0x04, 0x07, 0x02,
	0x00, 0x7d, 0x01, 0x00, 0x02, 0x01, 0x03, 0x21, 0x04, 0x07, 0x05, 0x7e,
	0x06, 0x7e, 0x50, 0x04, 0x02, 0x02, 0x40, 0x00, 0x61, 0x01
            })
            Name(TCBB, Buffer(0x59)
            {
	0x00, 0x01, 0x09, 0x00, 0x02, 0x01, 0x00, 0x00, 0x00, 0x02, 0x01, 0x24,
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x82, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x21, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x02, 0x01, 0x24,
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x02, 0x82, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x29, 0x01, 0x00, 0x00, 0x00, 0x00, 0x20,
	0x00, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x08,
	0x00, 0x03, 0x00, 0x03, 0x00
            })
            Scope(\_SB_.GPIO)
            {
                OperationRegion(GPZZ, GeneralPurposeIO, Zero, One)
            }
            Name(GBB0, Buffer(0x25)
            {
	0x8c, 0x20, 0x00, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x17, 0x00, 0x00, 0x19, 0x00, 0x23, 0x00, 0x00, 0x00, 0xd8,
	0x00, 0x5c, 0x5f, 0x53, 0x42, 0x2e, 0x47, 0x50, 0x49, 0x4f, 0x00, 0x79,
	0x00
            })
            Name(GBB7, Buffer(0x25)
            {
	0x8c, 0x20, 0x00, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x17, 0x00, 0x00, 0x19, 0x00, 0x23, 0x00, 0x00, 0x00, 0xdf,
	0x00, 0x5c, 0x5f, 0x53, 0x42, 0x2e, 0x47, 0x50, 0x49, 0x4f, 0x00, 0x79,
	0x00
            })
            Name(GPS1, Buffer(0x25)
            {
	0x8c, 0x20, 0x00, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x17, 0x00, 0x00, 0x19, 0x00, 0x23, 0x00, 0x00, 0x00, 0x91,
	0x00, 0x5c, 0x5f, 0x53, 0x42, 0x2e, 0x47, 0x50, 0x49, 0x4f, 0x00, 0x79,
	0x00
            })
            Name(GPR4, Buffer(0x25)
            {
	0x8c, 0x20, 0x00, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x17, 0x00, 0x00, 0x19, 0x00, 0x23, 0x00, 0x00, 0x00, 0x8c,
	0x00, 0x5c, 0x5f, 0x53, 0x42, 0x2e, 0x47, 0x50, 0x49, 0x4f, 0x00, 0x79,
	0x00
            })
            Name(GPR6, Buffer(0x25)
            {
	0x8c, 0x20, 0x00, 0x01, 0x01, 0x01, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x17, 0x00, 0x00, 0x19, 0x00, 0x23, 0x00, 0x00, 0x00, 0x8e,
	0x00, 0x5c, 0x5f, 0x53, 0x42, 0x2e, 0x47, 0x50, 0x49, 0x4f, 0x00, 0x79,
	0x00
            })
            Name(GPR7, Buffer(0x25)
            {
	0x8c, 0x20, 0x00, 0x01, 0x01, 0x01, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x17, 0x00, 0x00, 0x19, 0x00, 0x23, 0x00, 0x00, 0x00, 0x8f,
	0x00, 0x5c, 0x5f, 0x53, 0x42, 0x2e, 0x47, 0x50, 0x49, 0x4f, 0x00, 0x79,
	0x00
            })
            Name(GBB4, Buffer(0x25)
            {
	0x8c, 0x20, 0x00, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x17, 0x00, 0x00, 0x19, 0x00, 0x23, 0x00, 0x00, 0x00, 0xdc,
	0x00, 0x5c, 0x5f, 0x53, 0x42, 0x2e, 0x47, 0x50, 0x49, 0x4f, 0x00, 0x79,
	0x00
            })
            Field(\_SB_.GPIO.GPZZ, ByteAcc, NoLock, Preserve)
            {
                Connection(\_SB_.GFXC.GBB0),
                RST1, 1
            }
            Field(\_SB_.GPIO.GPZZ, ByteAcc, NoLock, Preserve)
            {
                Connection(\_SB_.GFXC.GBB7),
                RST2, 1
            }
            Field(\_SB_.GPIO.GPZZ, ByteAcc, NoLock, Preserve)
            {
                Connection(\_SB_.GFXC.GPS1),
                PWD1, 1
            }
            Field(\_SB_.GPIO.GPZZ, ByteAcc, NoLock, Preserve)
            {
                Connection(\_SB_.GFXC.GPR4),
                PWD2, 1
            }
            Field(\_SB_.GPIO.GPZZ, ByteAcc, NoLock, Preserve)
            {
                Connection(\_SB_.GFXC.GPR6),
                LDO1, 1
            }
            Field(\_SB_.GPIO.GPZZ, ByteAcc, NoLock, Preserve)
            {
                Connection(\_SB_.GFXC.GPR7),
                LDO2, 1
            }
            Field(\_SB_.GPIO.GPZZ, ByteAcc, NoLock, Preserve)
            {
                Connection(\_SB_.GFXC.GBB4),
                E1V8, 1
            }
            Device(CAM1)
            {
                Name(_ADR, 0x80030000)
                Method(CPWR, 0x2, NotSerialized)
                {
                    While(One)
                    {
                        Name(_T_0, 0x0)
                        _T_0 = Arg0
                        If(_T_0 == One)
                        {
                            While(One)
                            {
                                Name(_T_1, 0x0)
                                _T_1 = Arg1
                                If(_T_1 == Zero)
                                {
                                    Stall(0x1e)
                                    ^^RST1 = Zero
                                    ^^LDO1 = Zero
                                    ^^E1V8 = Zero
                                }
                                Else
                                {
                                    If(_T_1 == One)
                                    {
                                        ^^RST1 = Zero
                                        Stall(0x64)
                                        ^^E1V8 = One
                                        ^^LDO1 = One
                                        Local0 = 0x1e
                                        While(Local0)
                                        {
                                            Local0--
                                            Stall(0x64)
                                        }
                                        ^^RST1 = One
                                        Stall(0x64)
                                        Stall(0x64)
                                        Stall(0x64)
                                        Stall(0x32)
                                    }
                                    Else
                                    {
                                        If(_T_1 == 0x2)
                                        {
                                            ^^RST1 = Zero
                                            Stall(0x64)
                                            ^^RST1 = One
                                            Stall(0x64)
                                            Stall(0x64)
                                            Stall(0x64)
                                            Stall(0x32)
                                        }
                                    }
                                }
                                Break
                            }
                        }
                        Else
                        {
                            If(_T_0 == 0x2)
                            {
                                While(One)
                                {
                                    Name(_T_2, 0x0)
                                    _T_2 = Arg1
                                    If(_T_2 == Zero)
                                    {
                                        Stall(0x1e)
                                        ^^RST2 = Zero
                                        ^^LDO2 = Zero
                                        ^^E1V8 = Zero
                                    }
                                    Else
                                    {
                                        If(_T_2 == One)
                                        {
                                            ^^RST2 = Zero
                                            Stall(0x64)
                                            ^^E1V8 = One
                                            ^^LDO2 = One
                                            Local0 = 0x1e
                                            While(Local0)
                                            {
                                                Local0--
                                                Stall(0x64)
                                            }
                                            ^^RST2 = One
                                            Stall(0x64)
                                            Stall(0x64)
                                            Stall(0x64)
                                            Stall(0x32)
                                        }
                                        Else
                                        {
                                            If(_T_2 == 0x2)
                                            {
                                                ^^RST2 = Zero
                                                Stall(0x64)
                                                ^^RST2 = One
                                                Stall(0x64)
                                                Stall(0x64)
                                                Stall(0x64)
                                                Stall(0x32)
                                            }
                                        }
                                    }
                                    Break
                                }
                            }
                        }
                        Break
                    }
                    Return(Zero)
                }
            }
        }
        Scope(GPIO)
        {
            OperationRegion(GPOF, SystemMemory, 0x6000d000, 0x800)
            Field(GPOF, DWordAcc, NoLock, Preserve)
            {
                Offset(0x2a0),
                OUTI, 32,
                Offset(0x7a4),
                OUDD, 32
            }
            Method(_INI, 0x0, NotSerialized)
            {
                If(!(\_SB_.USB1.UMOD == 0x3))
                {
                    If(!(\_SB_.BDID < 0x3))
                    {
                        ^OUDD = 0x4000
                    }
                    Else
                    {
                        ^OUDD = 0x4040
                    }
                }
            }
        }
        Scope(\_SB_.I2C1)
        {
            Name(SEN1, Buffer(0x1e)
            {
	0x8e, 0x19, 0x00, 0x01, 0x00, 0x01, 0x02, 0x00, 0x00, 0x01, 0x06, 0x00,
	0x80, 0x1a, 0x06, 0x00, 0x28, 0x00, 0x5c, 0x5f, 0x53, 0x42, 0x2e, 0x49,
	0x32, 0x43, 0x31, 0x00, 0x79, 0x00
            })
            OperationRegion(SNOP, GenericSerialBus, Zero, 0x100)
            Field(SNOP, BufferAcc, NoLock, Preserve)
            {
                Connection(SEN1),
                Offset(0x22),
                AccessAs(BufferAcc, AttribBytes(4)),
                SREV, 32,
                AccessAs(BufferAcc, AttribBytes(8)),
                SSUB, 64
            }
            Device(SNMU)
            {
                Name(_HID, "MSHW0001")
                Name(_CID, "PNP0C50")
                Name(_DEP, Package(0x2)
                {
                    \_SB_.I2C1,
                    \_SB_.GPIO
                })
                Name(SBUF, Buffer(0xa)
                {
                })
                CreateByteField(SBUF, Zero, STAT)
                CreateByteField(SBUF, One, LEN_)
                CreateDWordField(SBUF, 0x2, DATD)
                CreateField(SBUF, 0x10, 0x40, DBUF)
                Method(_HRV, 0x0, NotSerialized)
                {
                    \_SB_.GPIO._E59()
                    \_SB_.GPIO._E90()
                    SBUF = SREV
                    \_SB_.GPIO.SHRV = DATD
                    Return(\_SB_.GPIO.SHRV)
                }
                Name(GPIA, Buffer(0x25)
                {
	0x8c, 0x20, 0x00, 0x01, 0x01, 0x01, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x17, 0x00, 0x00, 0x19, 0x00, 0x23, 0x00, 0x00, 0x00, 0x90,
	0x00, 0x5c, 0x5f, 0x53, 0x42, 0x2e, 0x47, 0x50, 0x49, 0x4f, 0x00, 0x79,
	0x00
                })
                Name(AIRB, Zero)
                Name(EBUF, Buffer(0x41)
                {
	0x8e, 0x19, 0x00, 0x01, 0x00, 0x01, 0x02, 0x00, 0x00, 0x01, 0x06, 0x00,
	0x80, 0x1a, 0x06, 0x00, 0x28, 0x00, 0x5c, 0x5f, 0x53, 0x42, 0x2e, 0x49,
	0x32, 0x43, 0x31, 0x00, 0x8c, 0x20, 0x00, 0x01, 0x00, 0x01, 0x00, 0x0a,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x17, 0x00, 0x00, 0x19, 0x00, 0x23,
	0x00, 0x00, 0x00, 0x6a, 0x00, 0x5c, 0x5f, 0x53, 0x42, 0x2e, 0x47, 0x50,
	0x49, 0x4f, 0x00, 0x79, 0x00
                })
                Name(BUF3, Buffer(0x41)
                {
	0x8e, 0x19, 0x00, 0x01, 0x00, 0x01, 0x02, 0x00, 0x00, 0x01, 0x06, 0x00,
	0x80, 0x1a, 0x06, 0x00, 0x28, 0x00, 0x5c, 0x5f, 0x53, 0x42, 0x2e, 0x49,
	0x32, 0x43, 0x31, 0x00, 0x8c, 0x20, 0x00, 0x01, 0x00, 0x01, 0x00, 0x0a,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x17, 0x00, 0x00, 0x19, 0x00, 0x23,
	0x00, 0x00, 0x00, 0xde, 0x00, 0x5c, 0x5f, 0x53, 0x42, 0x2e, 0x47, 0x50,
	0x49, 0x4f, 0x00, 0x79, 0x00
                })
                Name(_PR0, Package(0x1)
                {
                    PRMU
                })
                Method(_CRS, 0x0, NotSerialized)
                {
                    If(\_SB_.BDID < 0x3)
                    {
                        Return(EBUF)
                    }
                    Else
                    {
                        Return(BUF3)
                    }
                }
                Method(_DSM, 0x4, NotSerialized)
                {
                    If(Arg0 == (Buffer(0x10)
                    {
	0xf7, 0xf6, 0xdf, 0x3c, 0x67, 0x42, 0x55, 0x45, 0xad, 0x05, 0xb3, 0x0a,
	0x3d, 0x89, 0x38, 0xde
                    }))
                    {
                        If(Arg2 == Zero)
                        {
                            If(Arg1 == One)
                            {
                                Return(Buffer(One)
                                {
	0x03
                                })
                            }
                        }
                        If(Arg2 == One)
                        {
                            Return(One)
                        }
                    }
                    Else
                    {
                        Return(Buffer(One)
                        {
	0x00
                        })
                    }
                }
                Method(_STA, 0x0, NotSerialized)
                {
                    Return(0xf)
                }
            }
        }
        Scope(\_SB_.I2C1)
        {
            Name(ACC1, Buffer(0x1e)
            {
	0x8e, 0x19, 0x00, 0x01, 0x00, 0x01, 0x02, 0x00, 0x00, 0x01, 0x06, 0x00,
	0x80, 0x1a, 0x06, 0x00, 0x00, 0x00, 0x5c, 0x5f, 0x53, 0x42, 0x2e, 0x49,
	0x32, 0x43, 0x31, 0x00, 0x79, 0x00
            })
            OperationRegion(ACOP, GenericSerialBus, Zero, 0x100)
            Field(ACOP, BufferAcc, NoLock, Preserve)
            {
                Connection(ACC1),
                Offset(0x54),
                AccessAs(BufferAcc, AttribBytes(4)),
                AREV, 32,
                AccessAs(BufferAcc, AttribBytes(8)),
                ASUB, 64
            }
            Name(BUFF, Buffer(0xa)
            {
            })
            CreateByteField(BUFF, Zero, STT_)
            CreateByteField(BUFF, One, LN__)
            CreateDWordField(BUFF, 0x2, DTD_)
            CreateField(BUFF, 0x10, 0x40, DBF_)
        }
        Scope(SDM1)
        {
            Name(CRSA, Buffer(0x6b)
            {
	0x8c, 0x20, 0x00, 0x01, 0x00, 0x01, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x00,
	0x88, 0x13, 0x17, 0x00, 0x00, 0x19, 0x00, 0x23, 0x00, 0x00, 0x00, 0x45,
	0x00, 0x5c, 0x5f, 0x53, 0x42, 0x2e, 0x47, 0x50, 0x49, 0x4f, 0x00, 0x8c,
	0x20, 0x00, 0x01, 0x01, 0x01, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x17, 0x00, 0x00, 0x19, 0x00, 0x23, 0x00, 0x00, 0x00, 0x45, 0x00,
	0x5c, 0x5f, 0x53, 0x42, 0x2e, 0x47, 0x50, 0x49, 0x4f, 0x00, 0x8c, 0x20,
	0x00, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x17, 0x00, 0x00, 0x19, 0x00, 0x23, 0x00, 0x00, 0x00, 0x9b, 0x00, 0x5c,
	0x5f, 0x53, 0x42, 0x2e, 0x47, 0x50, 0x49, 0x4f, 0x00, 0x79, 0x00
            })
            Name(_PR0, Package(0x1)
            {
                PRS1
            })
        }
        Scope(SDM3)
        {
            Device(WIFI)
            {
                Name(_PRW, Package(0x2)
                {
                    Zero,
                    Zero
                })
                Name(_S0W, 0x2)
                Name(_S4W, 0x2)
                Name(_ADR, One)
                Method(_RMV, 0x0, NotSerialized)
                {
                    Return(Zero)
                }
                Name(_CRS, Buffer(0x25)
                {
	0x8c, 0x20, 0x00, 0x01, 0x00, 0x01, 0x00, 0x18, 0x00, 0x02, 0x00, 0x00,
	0x00, 0x00, 0x17, 0x00, 0x00, 0x19, 0x00, 0x23, 0x00, 0x00, 0x00, 0xa5,
	0x00, 0x5c, 0x5f, 0x53, 0x42, 0x2e, 0x47, 0x50, 0x49, 0x4f, 0x00, 0x79,
	0x00
                })
            }
        }
        Scope(GFXC)
        {
            Name(BKLP, Package(0x7)
            {
                0x110,
                0x200,
                Zero,
                Zero,
                0x5,
                One,
                Package(0x4)
                {
                    0x3e8,
                    0x14,
                    0x3e8,
                    Package(0x3)
                    {
                        0x65,
                        Package(0x65)
                        {
                            0x18,
                            0x19,
                            0x1a,
                            0x1b,
                            0x1c,
                            0x1d,
                            0x20,
                            0x21,
                            0x24,
                            0x28,
                            0x2b,
                            0x2f,
                            0x33,
                            0x37,
                            0x3f,
                            0x43,
                            0x47,
                            0x4f,
                            0x56,
                            0x5a,
                            0x62,
                            0x6a,
                            0x72,
                            0x7a,
                            0x81,
                            0x89,
                            0x95,
                            0x9d,
                            0xa5,
                            0xac,
                            0xb8,
                            0xc0,
                            0xc8,
                            0xd0,
                            0xd7,
                            0xe3,
                            0xeb,
                            0xf3,
                            0xfa,
                            0x102,
                            0x10a,
                            0x116,
                            0x11e,
                            0x125,
                            0x12d,
                            0x135,
                            0x13d,
                            0x149,
                            0x150,
                            0x158,
                            0x160,
                            0x168,
                            0x170,
                            0x177,
                            0x183,
                            0x18b,
                            0x193,
                            0x19b,
                            0x1a2,
                            0x1aa,
                            0x1b6,
                            0x1be,
                            0x1c6,
                            0x1cd,
                            0x1d5,
                            0x1dd,
                            0x1e9,
                            0x1f1,
                            0x1f8,
                            0x200,
                            0x208,
                            0x210,
                            0x21c,
                            0x223,
                            0x22b,
                            0x233,
                            0x23b,
                            0x243,
                            0x24a,
                            0x256,
                            0x25e,
                            0x26e,
                            0x27d,
                            0x28d,
                            0x299,
                            0x2a8,
                            0x2b8,
                            0x2c7,
                            0x2d7,
                            0x2df,
                            0x2f6,
                            0x30e,
                            0x325,
                            0x33d,
                            0x354,
                            0x36b,
                            0x387,
                            0x39e,
                            0x3ba,
                            0x3d1,
                            0x3e8
                        },
                        Package(0x65)
                        {
                            Zero,
                            0xa,
                            0x14,
                            0x1e,
                            0x28,
                            0x32,
                            0x3c,
                            0x46,
                            0x50,
                            0x5a,
                            0x64,
                            0x6e,
                            0x78,
                            0x82,
                            0x8c,
                            0x96,
                            0xa0,
                            0xaa,
                            0xb4,
                            0xbe,
                            0xc8,
                            0xd2,
                            0xdc,
                            0xe6,
                            0xf0,
                            0xfa,
                            0x104,
                            0x10e,
                            0x118,
                            0x122,
                            0x12c,
                            0x136,
                            0x140,
                            0x14a,
                            0x154,
                            0x15e,
                            0x168,
                            0x172,
                            0x17c,
                            0x186,
                            0x190,
                            0x19a,
                            0x1a4,
                            0x1ae,
                            0x1b8,
                            0x1c2,
                            0x1cc,
                            0x1d6,
                            0x1e0,
                            0x1ea,
                            0x1f4,
                            0x1fe,
                            0x208,
                            0x212,
                            0x21c,
                            0x226,
                            0x230,
                            0x23a,
                            0x244,
                            0x24e,
                            0x258,
                            0x262,
                            0x26c,
                            0x276,
                            0x280,
                            0x28a,
                            0x294,
                            0x29e,
                            0x2a8,
                            0x2b2,
                            0x2bc,
                            0x2c6,
                            0x2d0,
                            0x2da,
                            0x2e4,
                            0x2ee,
                            0x2f8,
                            0x302,
                            0x30c,
                            0x316,
                            0x320,
                            0x32a,
                            0x334,
                            0x33e,
                            0x348,
                            0x352,
                            0x35c,
                            0x366,
                            0x370,
                            0x37a,
                            0x384,
                            0x38e,
                            0x398,
                            0x3a2,
                            0x3ac,
                            0x3b6,
                            0x3c0,
                            0x3ca,
                            0x3d4,
                            0x3de,
                            0x3e8
                        }
                    }
                }
            })
            Method(_DOD, 0x0, NotSerialized)
            {
                Return(Package(0x3)
                {
                    0x110,
                    0x80000100,
                    0x80007330
                })
            }
            Device(CRT0)
            {
                Method(_ADR, 0x0, NotSerialized)
                {
                    Return(0x80000100)
                }
            }
            Device(HDMI)
            {
                Method(_ADR, 0x0, NotSerialized)
                {
                    Return(0x80007330)
                }
            }
            Device(LCD0)
            {
                Name(_PR0, Package(0x1)
                {
                    PRTC
                })
                Method(_ADR, 0x0, NotSerialized)
                {
                    Return(0x110)
                }
                Method(DDCK, 0x0, NotSerialized)
                {
                    Return(Buffer(0x80)
                    {
	0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x4c, 0xa3, 0x42, 0x31,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x15, 0x01, 0x04, 0xa0, 0x17, 0x0d, 0x78,
	0x0a, 0x87, 0xf5, 0x94, 0x57, 0x4f, 0x8c, 0x27, 0x27, 0x50, 0x54, 0x00,
	0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
	0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x1e, 0x1c, 0x56, 0xb0, 0x50, 0x00,
	0x0a, 0x30, 0x0e, 0x38, 0x13, 0x00, 0xeb, 0x84, 0x00, 0x00, 0x00, 0x19,
	0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x44, 0xdc, 0x03, 0x74, 0x00, 0x00, 0x00, 0x00, 0xfe, 0x00, 0x53,
	0x41, 0x4d, 0x53, 0x55, 0x4e, 0x47, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x00, 0x00, 0x00, 0xfe, 0x00, 0x31, 0x30, 0x36, 0x41, 0x4c, 0x30, 0x31,
	0x2d, 0x30, 0x30, 0x31, 0x0a, 0x20, 0x00, 0x7e
                    })
                }
                Method(_DDC, 0x1, NotSerialized)
                {
                    If(\_SB_.DDIS == One)
                    {
                        Return(Zero)
                    }
                    Return(DDCK())
                }
                OperationRegion(CPWM, SystemMemory, 0x7000a000, 0xa)
                Field(CPWM, DWordAcc, NoLock, Preserve)
                {
                    PWM1, 32
                }
                Method(_BCL, 0x0, NotSerialized)
                {
                    Return(Package(0x67)
                    {
                        0x64,
                        0x64,
                        Zero,
                        One,
                        0x2,
                        0x3,
                        0x4,
                        0x5,
                        0x6,
                        0x7,
                        0x8,
                        0x9,
                        0xa,
                        0xb,
                        0xc,
                        0xd,
                        0xe,
                        0xf,
                        0x10,
                        0x11,
                        0x12,
                        0x13,
                        0x14,
                        0x15,
                        0x16,
                        0x17,
                        0x18,
                        0x19,
                        0x1a,
                        0x1b,
                        0x1c,
                        0x1d,
                        0x1e,
                        0x1f,
                        0x20,
                        0x21,
                        0x22,
                        0x23,
                        0x24,
                        0x25,
                        0x26,
                        0x27,
                        0x28,
                        0x29,
                        0x2a,
                        0x2b,
                        0x2c,
                        0x2d,
                        0x2e,
                        0x2f,
                        0x30,
                        0x31,
                        0x32,
                        0x33,
                        0x34,
                        0x35,
                        0x36,
                        0x37,
                        0x38,
                        0x39,
                        0x3a,
                        0x3b,
                        0x3c,
                        0x3d,
                        0x3e,
                        0x3f,
                        0x40,
                        0x41,
                        0x42,
                        0x43,
                        0x44,
                        0x45,
                        0x46,
                        0x47,
                        0x48,
                        0x49,
                        0x4a,
                        0x4b,
                        0x4c,
                        0x4d,
                        0x4e,
                        0x4f,
                        0x50,
                        0x51,
                        0x52,
                        0x53,
                        0x54,
                        0x55,
                        0x56,
                        0x57,
                        0x58,
                        0x59,
                        0x5a,
                        0x5b,
                        0x5c,
                        0x5d,
                        0x5e,
                        0x5f,
                        0x60,
                        0x61,
                        0x62,
                        0x63,
                        0x64
                    })
                }
            }
            Method(MDTL, 0x0, NotSerialized)
            {
                Return(Zero)
            }
            Method(LIDB, 0x0, NotSerialized)
            {
                Return(One)
            }
        }
        Device(LID_)
        {
            Name(_HID, 0xd0cd041)
            Method(_STA, 0x0, NotSerialized)
            {
                If(!(\_SB_.BDID > 0x2))
                {
                    Return(Zero)
                }
                Else
                {
                    Return(0xf)
                }
            }
            Name(LIDB, One)
            Method(_LID, 0x0, NotSerialized)
            {
                Return(LIDB)
            }
            Name(GMOD, Buffer(0x25)
            {
	0x8c, 0x20, 0x00, 0x01, 0x01, 0x01, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x17, 0x00, 0x00, 0x19, 0x00, 0x23, 0x00, 0x00, 0x00, 0x59,
	0x00, 0x5c, 0x5f, 0x53, 0x42, 0x2e, 0x47, 0x50, 0x49, 0x4f, 0x00, 0x79,
	0x00
            })
        }
        Device(THEM)
        {
            Method(_HID, 0x0, NotSerialized)
            {
                Return("NVDAF300")
            }
            Name(_UID, Zero)
            Name(_DEP, Package(0x1)
            {
                \_SB_.I2C5
            })
            Method(_CRS, 0x0, NotSerialized)
            {
                Name(CRSB, Buffer(0x41)
                {
	0x8e, 0x19, 0x00, 0x01, 0x00, 0x01, 0x02, 0x00, 0x00, 0x01, 0x06, 0x00,
	0x80, 0x1a, 0x06, 0x00, 0x4c, 0x00, 0x5c, 0x5f, 0x53, 0x42, 0x2e, 0x49,
	0x32, 0x43, 0x35, 0x00, 0x8c, 0x20, 0x00, 0x01, 0x00, 0x01, 0x00, 0x12,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x17, 0x00, 0x00, 0x19, 0x00, 0x23,
	0x00, 0x00, 0x00, 0xeb, 0x00, 0x5c, 0x5f, 0x53, 0x42, 0x2e, 0x47, 0x50,
	0x49, 0x4f, 0x00, 0x79, 0x00
                })
                CreateByteField(CRSB, 0x33, GINT)
                If(!(\_SB_.BDID < 0x3))
                {
                    GINT = 0xa9
                }
                Return(CRSB)
            }
            Method(_DSM, 0x4, NotSerialized)
            {
                If(Arg0 == (Buffer(0x10)
                {
	0x58, 0xf4, 0x36, 0x60, 0x0e, 0x31, 0x90, 0x49, 0xb1, 0xef, 0x34, 0xa6,
	0x0b, 0x72, 0xd8, 0x9d
                }))
                {
                    If(Arg2 == Zero)
                    {
                        If(Arg1 == One)
                        {
                            Return(Buffer(One)
                            {
	0x1b
                            })
                        }
                    }
                    If(Arg1 == One)
                    {
                        If(Arg2 == One)
                        {
                            Return(Package(0x2)
                            {
                                0x10010,
                                0x10023
                            })
                        }
                    }
                    If(Arg2 == 0x3)
                    {
                        If(Arg3 == 0x10)
                        {
                            Name(THM1, Package(0x7)
                            {
                                0x60010,
                                0x31110,
                                0x62311,
                                0x30002,
                                0x41213,
                                0x12414,
                                0x40105
                            })
                            Return(THM1)
                        }
                    }
                    If(Arg2 == 0x4)
                    {
                        If(Arg3 == 0x20010)
                        {
                            Local0 = \_TZ_.TZ05._TMP()
                            Local0 = Local0 - 0xaac
                            Local1 = Arg3
                            Local1 = Local1 & 0xf0000
                            Local0 = Local1 | Local0
                            Return(Local0)
                        }
                        If(Arg3 == 0x50010)
                        {
                            Local0 = \_TZ_.TZ05._TMP()
                            Local0 = Local0 - 0xaac
                            Local1 = Arg3
                            Local1 = Local1 & 0xffff0000
                            Local0 = Local1 | Local0
                            Return(Local0)
                        }
                    }
                }
                Else
                {
                    Return(Buffer(One)
                    {
	0x00
                    })
                }
            }
        }
        OperationRegion(APBM, SystemMemory, 0x70000000, 0x100)
        Field(APBM, DWordAcc, NoLock, Preserve)
        {
            Offset(0x8),
            , 4,
            STRP, 4
        }
        Scope(PEPD)
        {
            Name(EMC1, Buffer(0x901)
            {
	0x32, 0x38, 0xc7, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00,
	0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00,
	0x00, 0x0a, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00,
	0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00,
	0x00, 0x05, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00,
	0x00, 0x0b, 0x00, 0x00, 0x00, 0x81, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x60, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00,
	0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00,
	0x00, 0x0f, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00,
	0x00, 0x04, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x04, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x8e, 0x01, 0x00,
	0x00, 0x06, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x88, 0x42, 0x00, 0x00, 0xa4, 0x00, 0x78,
	0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0xc0, 0x0f, 0x00, 0x00, 0xc0, 0x0f,
	0x00, 0x00, 0xc0, 0x0f, 0x00, 0x00, 0xc0, 0x0f, 0x00, 0x00, 0xc0, 0x0f,
	0x00, 0x00, 0xc0, 0x0f, 0x00, 0x00, 0xc0, 0x0f, 0x00, 0x00, 0xc0, 0x0f,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x0f, 0x00, 0x00, 0xc0, 0x0f,
	0x00, 0x00, 0xc0, 0x0f, 0x00, 0x00, 0xc0, 0x0f, 0x00, 0xa0, 0x02, 0x00,
	0x00, 0x1c, 0x21, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x84, 0xf8, 0xff,
	0x77, 0x08, 0xf1, 0xf1, 0x01, 0x04, 0x74, 0x05, 0x05, 0x07, 0x00, 0x00,
	0x54, 0x68, 0x01, 0x00, 0x08, 0x00, 0x00, 0x00, 0x08, 0x02, 0x08, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x0c,
	0x00, 0x00, 0x00, 0xf1, 0xa0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x0b, 0x04, 0x00, 0x80, 0x03, 0x00, 0x01, 0x00, 0x10, 0x00, 0x00,
	0xc0, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00,
	0x00, 0x03, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00,
	0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00,
	0x00, 0x02, 0x01, 0x02, 0x06, 0x02, 0x05, 0x0a, 0x00, 0x03, 0x03, 0x63,
	0x74, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00, 0x00, 0xe8, 0x00, 0xff, 0x00,
	0xff, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0x1f, 0x00, 0x01, 0x00, 0x00,
	0x00, 0x21, 0x12, 0x00, 0x80, 0x03, 0x00, 0x10, 0x80, 0x08, 0x00, 0x20,
	0x80, 0x01, 0x00, 0x00, 0x00, 0x32, 0x70, 0x8e, 0x01, 0x00, 0x04, 0x00,
	0x00, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00,
	0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x05, 0x00,
	0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00,
	0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x04, 0x00,
	0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x03, 0x03,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x02, 0x00,
	0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x1c, 0x00,
	0x00, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x05, 0x00,
	0x00, 0x00, 0x1c, 0x03, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x04, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x88, 0x42,
	0x00, 0x00, 0xa4, 0x00, 0x78, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0xc0,
	0x0f, 0x00, 0x00, 0xc0, 0x0f, 0x00, 0x00, 0xc0, 0x0f, 0x00, 0x00, 0xc0,
	0x0f, 0x00, 0x00, 0xc0, 0x0f, 0x00, 0x00, 0xc0, 0x0f, 0x00, 0x00, 0xc0,
	0x0f, 0x00, 0x00, 0xc0, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0,
	0x0f, 0x00, 0x00, 0xc0, 0x0f, 0x00, 0x00, 0xc0, 0x0f, 0x00, 0x00, 0xc0,
	0x0f, 0x00, 0xa0, 0x02, 0x00, 0x00, 0x1c, 0x21, 0x00, 0x08, 0x00, 0x00,
	0x00, 0x00, 0x84, 0xf8, 0xff, 0x77, 0x08, 0xf1, 0xf1, 0x01, 0x04, 0x74,
	0x05, 0x05, 0x07, 0x00, 0x00, 0x54, 0x68, 0x01, 0x00, 0x08, 0x00, 0x00,
	0x00, 0x08, 0x02, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00,
	0x00, 0x00, 0x0c, 0x00, 0x0c, 0x00, 0x00, 0x00, 0xf1, 0xa0, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0x07, 0x00, 0x80, 0x03, 0x00,
	0x00, 0x00, 0x18, 0x00, 0x00, 0xc0, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00,
	0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00,
	0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x08, 0x00,
	0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00,
	0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x02, 0x01, 0x02, 0x06, 0x03, 0x05,
	0x0a, 0x00, 0x04, 0x05, 0xc3, 0x73, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00,
	0x00, 0xe8, 0x00, 0xff, 0x00, 0xff, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x1f, 0x00, 0x01, 0x00, 0x00, 0x00, 0x21, 0x12, 0x00, 0x80, 0x03, 0x00,
	0x10, 0x80, 0x08, 0x00, 0x20, 0x80, 0x01, 0x00, 0x00, 0x00, 0x32, 0xe0,
	0x1c, 0x03, 0x00, 0x09, 0x00, 0x00, 0x00, 0x35, 0x00, 0x00, 0x00, 0x07,
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0a,
	0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x02,
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x05,
	0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x0b,
	0x00, 0x00, 0x00, 0x07, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x81,
	0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x0f,
	0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0x04,
	0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04,
	0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x38, 0x06, 0x00, 0x00, 0x06,
	0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x88, 0x42, 0x00, 0x00, 0xa4, 0x00, 0x44, 0x00, 0x00,
	0x80, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00,
	0x00, 0x08, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00,
	0x00, 0x08, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00,
	0x00, 0x08, 0x00, 0x00, 0x00, 0x08, 0x00, 0xa0, 0x02, 0x00, 0x00, 0x1c,
	0x21, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x84, 0xf8, 0xff, 0x77, 0x08,
	0xf1, 0xf1, 0x01, 0x04, 0x74, 0x05, 0x05, 0x07, 0x00, 0x00, 0x54, 0x68,
	0x01, 0x00, 0x08, 0x00, 0x00, 0x00, 0x08, 0x02, 0x08, 0x00, 0x00, 0x00,
	0x00, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x0c, 0x00, 0x0c, 0x00, 0x00,
	0x00, 0xf1, 0xa0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x22,
	0x0d, 0x00, 0x80, 0x06, 0x00, 0x00, 0x00, 0x25, 0x00, 0x00, 0xc0, 0x01,
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x02,
	0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x03,
	0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01,
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x02,
	0x01, 0x02, 0x06, 0x05, 0x05, 0x0a, 0x00, 0x06, 0x0a, 0x84, 0x73, 0x00,
	0x00, 0x1f, 0x00, 0x00, 0x00, 0x00, 0xe8, 0x00, 0xff, 0x00, 0xff, 0x40,
	0x00, 0x00, 0x00, 0xff, 0xff, 0x1f, 0x00, 0x01, 0x00, 0x00, 0x00, 0x21,
	0x12, 0x00, 0x80, 0x03, 0x00, 0x10, 0x80, 0x08, 0x00, 0x20, 0x80, 0x01,
	0x00, 0x00, 0x00, 0x32, 0xd8, 0xb8, 0x05, 0x00, 0x11, 0x00, 0x00, 0x00,
	0x60, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
	0x03, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
	0x0a, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
	0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x04, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
	0x0a, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x2d, 0x0b, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0xcb, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
	0x08, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x07, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x66, 0x00, 0x00, 0x00,
	0x00, 0x02, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,
	0x6d, 0x0b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x88, 0x70, 0x00, 0x00,
	0x84, 0x00, 0x20, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x40, 0x04, 0x00,
	0x00, 0x40, 0x04, 0x00, 0x00, 0x40, 0x04, 0x00, 0x00, 0x40, 0x04, 0x00,
	0x00, 0x40, 0x04, 0x00, 0x00, 0x40, 0x04, 0x00, 0x00, 0x40, 0x04, 0x00,
	0x00, 0x40, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x05, 0x00,
	0x00, 0x80, 0x05, 0x00, 0x00, 0x80, 0x05, 0x00, 0x00, 0x80, 0x05, 0x00,
	0xa0, 0x02, 0x00, 0x00, 0x3d, 0x01, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00,
	0x84, 0xf8, 0xff, 0x77, 0x08, 0xf5, 0xf1, 0x01, 0x04, 0x74, 0x05, 0x05,
	0x07, 0x00, 0x00, 0x54, 0xe8, 0x01, 0x00, 0x08, 0x21, 0x00, 0x00, 0x08,
	0x02, 0x08, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00,
	0x0c, 0x00, 0x5f, 0x01, 0x00, 0x00, 0xf1, 0xa0, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x4b, 0x17, 0x00, 0x80, 0x0b, 0x00, 0x00, 0x00,
	0x44, 0x00, 0x00, 0xc0, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
	0x09, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,
	0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
	0x02, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
	0x06, 0x00, 0x00, 0x00, 0x02, 0x02, 0x03, 0x06, 0x09, 0x07, 0x0d, 0x00,
	0x0a, 0x11, 0x86, 0x70, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00, 0x00, 0xe8,
	0x89, 0xff, 0x00, 0xff, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0x1f, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x21, 0x05, 0x00, 0x80, 0x02, 0x00, 0x10, 0x80,
	0x00, 0x00, 0x20, 0x80, 0x00, 0x00, 0x00, 0x00, 0x32, 0xb0, 0x71, 0x0b,
	0x00, 0x23, 0x00, 0x00, 0x00, 0xc1, 0x00, 0x00, 0x00, 0x19, 0x00, 0x00,
	0x00, 0x09, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00,
	0x00, 0x04, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00,
	0x00, 0x09, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00,
	0x00, 0x09, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00,
	0x00, 0x9a, 0x16, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa6, 0x05, 0x00,
	0x00, 0x03, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00,
	0x00, 0xcb, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x05, 0x00, 0x00,
	0x00, 0x17, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00,
	0x00, 0x08, 0x00, 0x00, 0x00, 0xda, 0x16, 0x00, 0x00, 0x0c, 0x00, 0x00,
	0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x88, 0x50, 0x00, 0x00, 0x91, 0x01, 0x08, 0xf0, 0x00, 0x80, 0x00,
	0x00, 0x0c, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00,
	0x00, 0x0c, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00,
	0x00, 0x06, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x0e, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00,
	0x00, 0x0e, 0x00, 0x00, 0x00, 0xa0, 0x02, 0x00, 0x00, 0x3d, 0x01, 0x00,
	0x08, 0x00, 0x00, 0x22, 0x22, 0x84, 0xf8, 0xff, 0x77, 0x01, 0xf5, 0xf1,
	0x01, 0x04, 0x74, 0x07, 0x07, 0x00, 0x00, 0x00, 0x54, 0xe8, 0x01, 0x00,
	0x08, 0x21, 0x00, 0x00, 0x08, 0x02, 0x08, 0x00, 0x00, 0x00, 0x00, 0x02,
	0x00, 0x00, 0x01, 0x00, 0x00, 0x0c, 0x00, 0xfd, 0x00, 0x04, 0x04, 0xf1,
	0xa0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x93, 0x2d, 0x00,
	0x80, 0x16, 0x00, 0x00, 0x00, 0x87, 0x00, 0x00, 0xc0, 0x04, 0x00, 0x00,
	0x00, 0x05, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00,
	0x00, 0x0b, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00,
	0x00, 0x0c, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00,
	0x00, 0x04, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x02, 0x02, 0x04,
	0x08, 0x12, 0x0d, 0x16, 0x00, 0x13, 0x22, 0x0c, 0x71, 0x00, 0x00, 0x1f,
	0x00, 0x00, 0x00, 0x00, 0xf8, 0x49, 0xff, 0x00, 0xff, 0x40, 0x00, 0x00,
	0x00, 0xff, 0xff, 0x1f, 0x00, 0x01, 0x00, 0x00, 0x00, 0x71, 0x0d, 0x00,
	0x80, 0x02, 0x00, 0x10, 0x80, 0x18, 0x00, 0x20, 0x80, 0x00, 0x00, 0x00,
	0x00
            })
            Name(EMC2, Buffer(0x734)
            {
	0x32, 0x38, 0xc7, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00,
	0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00,
	0x00, 0x0a, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00,
	0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00,
	0x00, 0x05, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00,
	0x00, 0x0b, 0x00, 0x00, 0x00, 0x81, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x60, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00,
	0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00,
	0x00, 0x0f, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00,
	0x00, 0x04, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x04, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x8e, 0x01, 0x00,
	0x00, 0x06, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x88, 0x42, 0x00, 0x00, 0xa4, 0x00, 0x78,
	0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0xc0, 0x0f, 0x00, 0x00, 0xc0, 0x0f,
	0x00, 0x00, 0xc0, 0x0f, 0x00, 0x00, 0xc0, 0x0f, 0x00, 0x00, 0xc0, 0x0f,
	0x00, 0x00, 0xc0, 0x0f, 0x00, 0x00, 0xc0, 0x0f, 0x00, 0x00, 0xc0, 0x0f,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x0f, 0x00, 0x00, 0xc0, 0x0f,
	0x00, 0x00, 0xc0, 0x0f, 0x00, 0x00, 0xc0, 0x0f, 0x00, 0xa0, 0x02, 0x00,
	0x00, 0x1c, 0x21, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x84, 0xf8, 0xff,
	0x77, 0x08, 0xf1, 0xf1, 0x01, 0x04, 0x74, 0x05, 0x05, 0x07, 0x00, 0x00,
	0x54, 0x68, 0x01, 0x00, 0x08, 0x00, 0x00, 0x00, 0x08, 0x02, 0x08, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x0c,
	0x00, 0x00, 0x00, 0xf1, 0xa0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x0b, 0x04, 0x00, 0x80, 0x01, 0x00, 0x01, 0x00, 0x10, 0x00, 0x00,
	0xc0, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00,
	0x00, 0x02, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00,
	0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00,
	0x00, 0x02, 0x01, 0x02, 0x06, 0x02, 0x04, 0x0a, 0x00, 0x03, 0x03, 0xe3,
	0x74, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00, 0x00, 0xe8, 0x00, 0xff, 0x00,
	0xff, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0x1f, 0x00, 0x01, 0x00, 0x00,
	0x00, 0x21, 0x12, 0x00, 0x80, 0x03, 0x00, 0x10, 0x80, 0x08, 0x00, 0x20,
	0x80, 0x01, 0x00, 0x00, 0x00, 0x32, 0x70, 0x8e, 0x01, 0x00, 0x04, 0x00,
	0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00,
	0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x03, 0x00,
	0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00,
	0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x04, 0x00,
	0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x03, 0x03,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x02, 0x00,
	0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x20, 0x00,
	0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x05, 0x00,
	0x00, 0x00, 0x1c, 0x03, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x04, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x88, 0x42,
	0x00, 0x00, 0xa4, 0x00, 0x78, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0xc0,
	0x0f, 0x00, 0x00, 0xc0, 0x0f, 0x00, 0x00, 0xc0, 0x0f, 0x00, 0x00, 0xc0,
	0x0f, 0x00, 0x00, 0xc0, 0x0f, 0x00, 0x00, 0xc0, 0x0f, 0x00, 0x00, 0xc0,
	0x0f, 0x00, 0x00, 0xc0, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0,
	0x0f, 0x00, 0x00, 0xc0, 0x0f, 0x00, 0x00, 0xc0, 0x0f, 0x00, 0x00, 0xc0,
	0x0f, 0x00, 0xa0, 0x02, 0x00, 0x00, 0x1c, 0x21, 0x00, 0x08, 0x00, 0x00,
	0x00, 0x00, 0x84, 0xf8, 0xff, 0x77, 0x08, 0xf1, 0xf1, 0x01, 0x04, 0x74,
	0x05, 0x05, 0x07, 0x00, 0x00, 0x54, 0x68, 0x01, 0x00, 0x08, 0x00, 0x00,
	0x00, 0x08, 0x02, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00,
	0x00, 0x00, 0x0c, 0x00, 0x0c, 0x00, 0x00, 0x00, 0xf1, 0xa0, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0x07, 0x00, 0x80, 0x01, 0x00,
	0x00, 0x00, 0x18, 0x00, 0x00, 0xc0, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00,
	0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00,
	0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x08, 0x00,
	0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00,
	0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x02, 0x01, 0x02, 0x06, 0x03, 0x04,
	0x0a, 0x00, 0x04, 0x05, 0x43, 0x74, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00,
	0x00, 0xe8, 0x00, 0xff, 0x00, 0xff, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x1f, 0x00, 0x01, 0x00, 0x00, 0x00, 0x21, 0x12, 0x00, 0x80, 0x03, 0x00,
	0x10, 0x80, 0x08, 0x00, 0x20, 0x80, 0x01, 0x00, 0x00, 0x00, 0x32, 0xd8,
	0xb8, 0x05, 0x00, 0x11, 0x00, 0x00, 0x00, 0x6f, 0x00, 0x00, 0x00, 0x0c,
	0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x08,
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x04,
	0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x06,
	0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x0c,
	0x00, 0x00, 0x00, 0x2d, 0x0b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xcb,
	0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x01,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x0f,
	0x00, 0x00, 0x00, 0x75, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x04,
	0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04,
	0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x6d, 0x0b, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x88, 0x70, 0x00, 0x00, 0x84, 0x00, 0x20, 0x00, 0x00,
	0x80, 0x00, 0x00, 0x00, 0x80, 0x02, 0x00, 0x00, 0x80, 0x02, 0x00, 0x00,
	0x80, 0x02, 0x00, 0x00, 0x80, 0x02, 0x00, 0x00, 0x80, 0x02, 0x00, 0x00,
	0x80, 0x02, 0x00, 0x00, 0x80, 0x02, 0x00, 0x00, 0x80, 0x02, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x40, 0x04, 0x00, 0x00, 0x40, 0x04, 0x00, 0x00,
	0x40, 0x04, 0x00, 0x00, 0x40, 0x04, 0x00, 0xa0, 0x02, 0x00, 0x00, 0x3d,
	0x01, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x84, 0xf8, 0xff, 0x77, 0x08,
	0xf5, 0xf1, 0x01, 0x04, 0x74, 0x05, 0x05, 0x07, 0x00, 0x00, 0x54, 0xe8,
	0x01, 0x00, 0x08, 0x21, 0x00, 0x00, 0x08, 0x02, 0x08, 0x00, 0x00, 0x00,
	0x00, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x0c, 0x00, 0x50, 0x01, 0x00,
	0x00, 0xf1, 0xa0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4b,
	0x17, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0xc0, 0x01,
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x05,
	0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02,
	0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02,
	0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x02,
	0x02, 0x03, 0x06, 0x09, 0x07, 0x0d, 0x00, 0x0a, 0x11, 0x86, 0x70, 0x00,
	0x00, 0x1f, 0x00, 0x00, 0x00, 0x00, 0xe8, 0x89, 0xff, 0x00, 0xff, 0x40,
	0x00, 0x00, 0x00, 0xff, 0xff, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x21,
	0x05, 0x00, 0x80, 0x02, 0x00, 0x10, 0x80, 0x00, 0x00, 0x20, 0x80, 0x00,
	0x00, 0x00, 0x00, 0x32, 0xb0, 0x71, 0x0b, 0x00, 0x23, 0x00, 0x00, 0x00,
	0xdf, 0x00, 0x00, 0x00, 0x19, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00,
	0x05, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
	0x13, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00,
	0x06, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x07, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00,
	0x0d, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00, 0x9a, 0x16, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0xa6, 0x05, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
	0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x0e, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0xe9, 0x00, 0x00, 0x00,
	0x00, 0x02, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x17, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
	0xda, 0x16, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x88, 0x50, 0x00, 0x00,
	0x91, 0x01, 0x07, 0x70, 0x00, 0x80, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00,
	0x06, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00,
	0x10, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
	0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
	0x08, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00,
	0x0e, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00,
	0xa0, 0x02, 0x00, 0x00, 0x3d, 0x01, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00,
	0x84, 0xf8, 0xff, 0x77, 0x01, 0xf5, 0xf1, 0x01, 0x04, 0x74, 0x07, 0x07,
	0x00, 0x00, 0x00, 0x54, 0xe8, 0x01, 0x00, 0x08, 0x21, 0x00, 0x00, 0x06,
	0x02, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,
	0x0c, 0x00, 0x1f, 0x01, 0x06, 0x06, 0xf1, 0xa0, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x93, 0x2d, 0x00, 0x80, 0x0b, 0x00, 0x00, 0x00,
	0x87, 0x00, 0x00, 0xc0, 0x04, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,
	0x12, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00,
	0x03, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00,
	0x02, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
	0x08, 0x00, 0x00, 0x00, 0x02, 0x02, 0x04, 0x08, 0x12, 0x0d, 0x16, 0x00,
	0x13, 0x22, 0x4c, 0x70, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00, 0x00, 0xe8,
	0x49, 0xff, 0x00, 0xff, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0x1f, 0x00,
	0x01, 0x00, 0x00, 0x00, 0x71, 0x1d, 0x00, 0x80, 0x02, 0x00, 0x10, 0x80,
	0x18, 0x00, 0x20, 0x80, 0x00, 0x00, 0x00, 0x00
            })
            Name(EMC3, Buffer(0x901)
            {
	0x32, 0x38, 0xc7, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00,
	0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00,
	0x00, 0x0a, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00,
	0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00,
	0x00, 0x05, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00,
	0x00, 0x0b, 0x00, 0x00, 0x00, 0x81, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x60, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00,
	0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00,
	0x00, 0x0f, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00,
	0x00, 0x04, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x04, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x8e, 0x01, 0x00,
	0x00, 0x06, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x88, 0x42, 0x00, 0x00, 0xa4, 0x00, 0x78,
	0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0xc0, 0x0f, 0x00, 0x00, 0xc0, 0x0f,
	0x00, 0x00, 0xc0, 0x0f, 0x00, 0x00, 0xc0, 0x0f, 0x00, 0x00, 0xc0, 0x0f,
	0x00, 0x00, 0xc0, 0x0f, 0x00, 0x00, 0xc0, 0x0f, 0x00, 0x00, 0xc0, 0x0f,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x0f, 0x00, 0x00, 0xc0, 0x0f,
	0x00, 0x00, 0xc0, 0x0f, 0x00, 0x00, 0xc0, 0x0f, 0x00, 0xa0, 0x02, 0x00,
	0x00, 0x1c, 0x21, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x84, 0xf8, 0xff,
	0x77, 0x08, 0xf1, 0xf1, 0x01, 0x04, 0x74, 0x05, 0x05, 0x07, 0x00, 0x00,
	0x54, 0x68, 0x01, 0x00, 0x08, 0x00, 0x00, 0x00, 0x08, 0x02, 0x08, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x0c,
	0x00, 0x00, 0x00, 0xf1, 0xa0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x0b, 0x04, 0x00, 0x80, 0x03, 0x00, 0x01, 0x00, 0x10, 0x00, 0x00,
	0xc0, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00,
	0x00, 0x03, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00,
	0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00,
	0x00, 0x02, 0x01, 0x02, 0x06, 0x02, 0x05, 0x0a, 0x00, 0x03, 0x03, 0xe3,
	0x74, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00, 0x00, 0xe8, 0x00, 0xff, 0x00,
	0xff, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0x1f, 0x00, 0x01, 0x00, 0x00,
	0x00, 0x21, 0x12, 0x00, 0x80, 0x03, 0x00, 0x10, 0x80, 0x08, 0x00, 0x20,
	0x80, 0x01, 0x00, 0x00, 0x00, 0x32, 0x70, 0x8e, 0x01, 0x00, 0x04, 0x00,
	0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00,
	0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x05, 0x00,
	0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00,
	0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x04, 0x00,
	0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x03, 0x03,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x02, 0x00,
	0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x20, 0x00,
	0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x05, 0x00,
	0x00, 0x00, 0x1c, 0x03, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x04, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x88, 0x42,
	0x00, 0x00, 0xa4, 0x00, 0x78, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0xc0,
	0x0f, 0x00, 0x00, 0xc0, 0x0f, 0x00, 0x00, 0xc0, 0x0f, 0x00, 0x00, 0xc0,
	0x0f, 0x00, 0x00, 0xc0, 0x0f, 0x00, 0x00, 0xc0, 0x0f, 0x00, 0x00, 0xc0,
	0x0f, 0x00, 0x00, 0xc0, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0,
	0x0f, 0x00, 0x00, 0xc0, 0x0f, 0x00, 0x00, 0xc0, 0x0f, 0x00, 0x00, 0xc0,
	0x0f, 0x00, 0xa0, 0x02, 0x00, 0x00, 0x1c, 0x21, 0x00, 0x08, 0x00, 0x00,
	0x00, 0x00, 0x84, 0xf8, 0xff, 0x77, 0x08, 0xf1, 0xf1, 0x01, 0x04, 0x74,
	0x05, 0x05, 0x07, 0x00, 0x00, 0x54, 0x68, 0x01, 0x00, 0x08, 0x00, 0x00,
	0x00, 0x08, 0x02, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00,
	0x00, 0x00, 0x0c, 0x00, 0x0c, 0x00, 0x00, 0x00, 0xf1, 0xa0, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0x07, 0x00, 0x80, 0x03, 0x00,
	0x00, 0x00, 0x18, 0x00, 0x00, 0xc0, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00,
	0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00,
	0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x08, 0x00,
	0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00,
	0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x02, 0x01, 0x02, 0x06, 0x03, 0x05,
	0x0a, 0x00, 0x04, 0x05, 0x43, 0x74, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00,
	0x00, 0xe8, 0x00, 0xff, 0x00, 0xff, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x1f, 0x00, 0x01, 0x00, 0x00, 0x00, 0x21, 0x12, 0x00, 0x80, 0x03, 0x00,
	0x10, 0x80, 0x08, 0x00, 0x20, 0x80, 0x01, 0x00, 0x00, 0x00, 0x32, 0xe0,
	0x1c, 0x03, 0x00, 0x09, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x00, 0x00, 0x07,
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0a,
	0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x02,
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x05,
	0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x0b,
	0x00, 0x00, 0x00, 0x07, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x81,
	0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x0f,
	0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x04,
	0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04,
	0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x38, 0x06, 0x00, 0x00, 0x06,
	0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x88, 0x42, 0x00, 0x00, 0xa4, 0x00, 0x44, 0x00, 0x00,
	0x80, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00,
	0x00, 0x08, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00,
	0x00, 0x08, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00,
	0x00, 0x08, 0x00, 0x00, 0x00, 0x08, 0x00, 0xa0, 0x02, 0x00, 0x00, 0x1c,
	0x21, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x84, 0xf8, 0xff, 0x77, 0x08,
	0xf1, 0xf1, 0x01, 0x04, 0x74, 0x05, 0x05, 0x07, 0x00, 0x00, 0x54, 0x68,
	0x01, 0x00, 0x08, 0x00, 0x00, 0x00, 0x08, 0x02, 0x08, 0x00, 0x00, 0x00,
	0x00, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x0c, 0x00, 0x0c, 0x00, 0x00,
	0x00, 0xf1, 0xa0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x22,
	0x0d, 0x00, 0x80, 0x06, 0x00, 0x00, 0x00, 0x25, 0x00, 0x00, 0xc0, 0x01,
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x02,
	0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x03,
	0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01,
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x02,
	0x01, 0x02, 0x06, 0x05, 0x05, 0x0a, 0x00, 0x06, 0x0a, 0x04, 0x74, 0x00,
	0x00, 0x1f, 0x00, 0x00, 0x00, 0x00, 0xe8, 0x00, 0xff, 0x00, 0xff, 0x40,
	0x00, 0x00, 0x00, 0xff, 0xff, 0x1f, 0x00, 0x01, 0x00, 0x00, 0x00, 0x21,
	0x12, 0x00, 0x80, 0x03, 0x00, 0x10, 0x80, 0x08, 0x00, 0x20, 0x80, 0x01,
	0x00, 0x00, 0x00, 0x32, 0xd8, 0xb8, 0x05, 0x00, 0x11, 0x00, 0x00, 0x00,
	0x6f, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
	0x03, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
	0x0a, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
	0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x04, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
	0x0a, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x2d, 0x0b, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0xcb, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
	0x08, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x07, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x75, 0x00, 0x00, 0x00,
	0x00, 0x02, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,
	0x6d, 0x0b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x88, 0x70, 0x00, 0x00,
	0x84, 0x00, 0x20, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00,
	0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00,
	0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00,
	0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00,
	0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x05, 0x00,
	0xa0, 0x02, 0x00, 0x00, 0x3d, 0x01, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00,
	0x84, 0xf8, 0xff, 0x77, 0x08, 0xf5, 0xf1, 0x01, 0x04, 0x74, 0x05, 0x05,
	0x07, 0x00, 0x00, 0x54, 0xe8, 0x01, 0x00, 0x08, 0x21, 0x00, 0x00, 0x08,
	0x02, 0x08, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00,
	0x0c, 0x00, 0x50, 0x01, 0x00, 0x00, 0xf1, 0xa0, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x4b, 0x17, 0x00, 0x80, 0x0b, 0x00, 0x00, 0x00,
	0x44, 0x00, 0x00, 0xc0, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
	0x09, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,
	0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
	0x02, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
	0x06, 0x00, 0x00, 0x00, 0x02, 0x02, 0x03, 0x06, 0x09, 0x07, 0x0d, 0x00,
	0x0a, 0x11, 0x86, 0x70, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00, 0x00, 0xe8,
	0x89, 0xff, 0x00, 0xff, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0x1f, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x21, 0x05, 0x00, 0x80, 0x02, 0x00, 0x10, 0x80,
	0x00, 0x00, 0x20, 0x80, 0x00, 0x00, 0x00, 0x00, 0x32, 0xb0, 0x71, 0x0b,
	0x00, 0x23, 0x00, 0x00, 0x00, 0xdf, 0x00, 0x00, 0x00, 0x19, 0x00, 0x00,
	0x00, 0x09, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00,
	0x00, 0x04, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00,
	0x00, 0x09, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00,
	0x00, 0x09, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00,
	0x00, 0x9a, 0x16, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa6, 0x05, 0x00,
	0x00, 0x03, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00,
	0x00, 0xe9, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x05, 0x00, 0x00,
	0x00, 0x17, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00,
	0x00, 0x08, 0x00, 0x00, 0x00, 0xda, 0x16, 0x00, 0x00, 0x0c, 0x00, 0x00,
	0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x88, 0x50, 0x00, 0x00, 0x91, 0x01, 0x08, 0xf0, 0x00, 0x80, 0x00,
	0x00, 0x0a, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00,
	0x00, 0x0a, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00,
	0x00, 0x0a, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x08, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00,
	0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x0c, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00,
	0x00, 0x0c, 0x00, 0x00, 0x00, 0xa0, 0x02, 0x00, 0x00, 0x3d, 0x01, 0x00,
	0x0a, 0x00, 0x00, 0x22, 0x22, 0x84, 0xf8, 0xff, 0x77, 0x01, 0xf5, 0xf1,
	0x01, 0x04, 0x74, 0x07, 0x07, 0x00, 0x00, 0x00, 0x54, 0xe8, 0x01, 0x00,
	0x08, 0x21, 0x00, 0x00, 0x0a, 0x02, 0x08, 0x00, 0x00, 0x00, 0x00, 0x02,
	0x00, 0x00, 0x01, 0x00, 0x00, 0x0c, 0x00, 0xdf, 0x00, 0x04, 0x04, 0xf1,
	0xa0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x93, 0x2d, 0x00,
	0x80, 0x16, 0x00, 0x00, 0x00, 0x87, 0x00, 0x00, 0xc0, 0x04, 0x00, 0x00,
	0x00, 0x05, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00,
	0x00, 0x0b, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00,
	0x00, 0x0c, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00,
	0x00, 0x04, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x02, 0x02, 0x04,
	0x08, 0x12, 0x0d, 0x16, 0x00, 0x13, 0x22, 0x0c, 0x71, 0x00, 0x00, 0x1f,
	0x00, 0x00, 0x00, 0x00, 0xf8, 0x49, 0xff, 0x00, 0xff, 0x40, 0x00, 0x00,
	0x00, 0xff, 0xff, 0x1f, 0x00, 0x01, 0x00, 0x00, 0x00, 0x71, 0x0d, 0x00,
	0x80, 0x02, 0x00, 0x10, 0x80, 0x18, 0x00, 0x20, 0x80, 0x00, 0x00, 0x00,
	0x00
            })
            Name(EMC4, Buffer(0x901)
            {
	0x32, 0x38, 0xc7, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00,
	0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00,
	0x00, 0x0a, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00,
	0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00,
	0x00, 0x05, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00,
	0x00, 0x0b, 0x00, 0x00, 0x00, 0x81, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x60, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00,
	0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00,
	0x00, 0x0f, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00,
	0x00, 0x04, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x04, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x8e, 0x01, 0x00,
	0x00, 0x06, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x88, 0x42, 0x00, 0x00, 0x24, 0x00, 0x78,
	0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0xc0, 0x0f, 0x00, 0x00, 0xc0, 0x0f,
	0x00, 0x00, 0xc0, 0x0f, 0x00, 0x00, 0xc0, 0x0f, 0x00, 0x00, 0xc0, 0x0f,
	0x00, 0x00, 0xc0, 0x0f, 0x00, 0x00, 0xc0, 0x0f, 0x00, 0x00, 0xc0, 0x0f,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x0f, 0x00, 0x00, 0xc0, 0x0f,
	0x00, 0x00, 0xc0, 0x0f, 0x00, 0x00, 0xc0, 0x0f, 0x00, 0xa0, 0x02, 0x00,
	0x00, 0x1c, 0x21, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x84, 0xf8, 0xff,
	0x77, 0x08, 0xf1, 0xf1, 0x01, 0x04, 0x74, 0x05, 0x05, 0x07, 0x00, 0x00,
	0x54, 0x68, 0x01, 0x00, 0x08, 0x00, 0x00, 0x00, 0x08, 0x02, 0x08, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x0c,
	0x00, 0x00, 0x00, 0xf1, 0xa0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x0b, 0x04, 0x00, 0x80, 0x01, 0x00, 0x01, 0x00, 0x10, 0x00, 0x00,
	0xc0, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00,
	0x00, 0x02, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00,
	0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00,
	0x00, 0x02, 0x01, 0x02, 0x06, 0x02, 0x04, 0x0a, 0x00, 0x03, 0x03, 0x23,
	0x70, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00, 0x00, 0xe8, 0x00, 0xff, 0x00,
	0xff, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0x1f, 0x00, 0x01, 0x00, 0x00,
	0x00, 0x21, 0x12, 0x00, 0x80, 0x03, 0x00, 0x10, 0x80, 0x08, 0x00, 0x20,
	0x80, 0x00, 0x00, 0x00, 0x00, 0x32, 0x70, 0x8e, 0x01, 0x00, 0x04, 0x00,
	0x00, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00,
	0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x05, 0x00,
	0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00,
	0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x04, 0x00,
	0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x03, 0x03,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x02, 0x00,
	0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x1c, 0x00,
	0x00, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x05, 0x00,
	0x00, 0x00, 0x1c, 0x03, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x04, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x88, 0x42,
	0x00, 0x00, 0x24, 0x00, 0x78, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0xc0,
	0x0f, 0x00, 0x00, 0xc0, 0x0f, 0x00, 0x00, 0xc0, 0x0f, 0x00, 0x00, 0xc0,
	0x0f, 0x00, 0x00, 0xc0, 0x0f, 0x00, 0x00, 0xc0, 0x0f, 0x00, 0x00, 0xc0,
	0x0f, 0x00, 0x00, 0xc0, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0,
	0x0f, 0x00, 0x00, 0xc0, 0x0f, 0x00, 0x00, 0xc0, 0x0f, 0x00, 0x00, 0xc0,
	0x0f, 0x00, 0xa0, 0x02, 0x00, 0x00, 0x1c, 0x21, 0x00, 0x08, 0x00, 0x00,
	0x00, 0x00, 0x84, 0xf8, 0xff, 0x77, 0x08, 0xf1, 0xf1, 0x01, 0x04, 0x74,
	0x05, 0x05, 0x07, 0x00, 0x00, 0x54, 0x68, 0x01, 0x00, 0x08, 0x00, 0x00,
	0x00, 0x08, 0x02, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00,
	0x00, 0x00, 0x0c, 0x00, 0x0c, 0x00, 0x00, 0x00, 0xf1, 0xa0, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0x07, 0x00, 0x80, 0x01, 0x00,
	0x00, 0x00, 0x18, 0x00, 0x00, 0xc0, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00,
	0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00,
	0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x08, 0x00,
	0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00,
	0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x02, 0x01, 0x02, 0x06, 0x03, 0x04,
	0x0a, 0x00, 0x04, 0x05, 0x23, 0x70, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00,
	0x00, 0xe8, 0x00, 0xff, 0x00, 0xff, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x1f, 0x00, 0x01, 0x00, 0x00, 0x00, 0x21, 0x12, 0x00, 0x80, 0x03, 0x00,
	0x10, 0x80, 0x08, 0x00, 0x20, 0x80, 0x00, 0x00, 0x00, 0x00, 0x32, 0xe0,
	0x1c, 0x03, 0x00, 0x09, 0x00, 0x00, 0x00, 0x35, 0x00, 0x00, 0x00, 0x07,
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0a,
	0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x02,
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x05,
	0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x0b,
	0x00, 0x00, 0x00, 0x07, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x81,
	0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x0f,
	0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0x04,
	0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04,
	0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x38, 0x06, 0x00, 0x00, 0x06,
	0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x88, 0x42, 0x00, 0x00, 0x24, 0x00, 0x44, 0x00, 0x00,
	0x80, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00,
	0x00, 0x08, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00,
	0x00, 0x08, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00,
	0x00, 0x08, 0x00, 0x00, 0x00, 0x08, 0x00, 0xa0, 0x02, 0x00, 0x00, 0x1c,
	0x21, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x84, 0xf8, 0xff, 0x77, 0x08,
	0xf1, 0xf1, 0x01, 0x04, 0x74, 0x05, 0x05, 0x07, 0x00, 0x00, 0x54, 0x68,
	0x01, 0x00, 0x08, 0x00, 0x00, 0x00, 0x08, 0x02, 0x08, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x0c, 0x00, 0x00,
	0x00, 0xf1, 0xa0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x22,
	0x0d, 0x00, 0x80, 0x03, 0x00, 0x00, 0x00, 0x25, 0x00, 0x00, 0xc0, 0x01,
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x02,
	0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02,
	0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01,
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x02,
	0x01, 0x02, 0x06, 0x05, 0x04, 0x0a, 0x00, 0x06, 0x0a, 0x24, 0x70, 0x00,
	0x00, 0x1f, 0x00, 0x00, 0x00, 0x00, 0xe8, 0x00, 0xff, 0x00, 0xff, 0x40,
	0x00, 0x00, 0x00, 0xff, 0xff, 0x1f, 0x00, 0x01, 0x00, 0x00, 0x00, 0x21,
	0x12, 0x00, 0x80, 0x03, 0x00, 0x10, 0x80, 0x08, 0x00, 0x20, 0x80, 0x00,
	0x00, 0x00, 0x00, 0x32, 0xd8, 0xb8, 0x05, 0x00, 0x11, 0x00, 0x00, 0x00,
	0x60, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
	0x03, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
	0x0a, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
	0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x04, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
	0x0a, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x2d, 0x0b, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0xcb, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
	0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x07, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x66, 0x00, 0x00, 0x00,
	0x00, 0x02, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,
	0x6d, 0x0b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x88, 0x70, 0x00, 0x00,
	0x04, 0x00, 0x20, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x40, 0x01, 0x00,
	0x00, 0x40, 0x01, 0x00, 0x00, 0x40, 0x01, 0x00, 0x00, 0x40, 0x01, 0x00,
	0x00, 0x40, 0x01, 0x00, 0x00, 0x40, 0x01, 0x00, 0x00, 0x40, 0x01, 0x00,
	0x00, 0x40, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x03, 0x00,
	0x00, 0x80, 0x03, 0x00, 0x00, 0x80, 0x03, 0x00, 0x00, 0x80, 0x03, 0x00,
	0xa0, 0x02, 0x00, 0x00, 0x3d, 0x01, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00,
	0x84, 0xf8, 0xff, 0x77, 0x08, 0xf5, 0xf1, 0x01, 0x04, 0x74, 0x05, 0x05,
	0x07, 0x00, 0x00, 0x54, 0xe8, 0x01, 0x00, 0x08, 0x21, 0x00, 0x00, 0x08,
	0x02, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,
	0x0c, 0x00, 0x9f, 0x01, 0x00, 0x00, 0xf1, 0xa0, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x4b, 0x17, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00,
	0x44, 0x00, 0x00, 0xc0, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
	0x09, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,
	0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
	0x02, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
	0x06, 0x00, 0x00, 0x00, 0x02, 0x02, 0x03, 0x06, 0x09, 0x07, 0x0d, 0x00,
	0x0a, 0x11, 0x26, 0x70, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00, 0x00, 0xe8,
	0x89, 0xff, 0x00, 0xff, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0x1f, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x21, 0x15, 0x00, 0x80, 0x02, 0x00, 0x10, 0x80,
	0x00, 0x00, 0x20, 0x80, 0x00, 0x00, 0x00, 0x00, 0x32, 0xb0, 0x71, 0x0b,
	0x00, 0x23, 0x00, 0x00, 0x00, 0xc1, 0x00, 0x00, 0x00, 0x19, 0x00, 0x00,
	0x00, 0x09, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00,
	0x00, 0x04, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00,
	0x00, 0x09, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00,
	0x00, 0x09, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00,
	0x00, 0x9a, 0x16, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa6, 0x05, 0x00,
	0x00, 0x03, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00,
	0x00, 0xcb, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x05, 0x00, 0x00,
	0x00, 0x17, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00,
	0x00, 0x08, 0x00, 0x00, 0x00, 0xda, 0x16, 0x00, 0x00, 0x0c, 0x00, 0x00,
	0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x88, 0x50, 0x00, 0x00, 0x04, 0x00, 0x08, 0x00, 0x00, 0x80, 0x00,
	0x00, 0x06, 0x00, 0x01, 0x00, 0x06, 0x00, 0x01, 0x00, 0x06, 0x00, 0x01,
	0x00, 0x06, 0x00, 0x01, 0x00, 0x06, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00,
	0x00, 0x06, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x08, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00,
	0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x0c, 0x80, 0x01, 0x00, 0x0c, 0x80, 0x01, 0x00, 0x0c, 0x80, 0x01,
	0x00, 0x0c, 0x80, 0x01, 0x00, 0xa0, 0x02, 0x00, 0x00, 0x3d, 0x01, 0x00,
	0x08, 0x00, 0x00, 0x22, 0x22, 0x84, 0xf8, 0xff, 0x77, 0x01, 0xf5, 0xf1,
	0x01, 0x04, 0x74, 0x07, 0x07, 0x00, 0x00, 0x00, 0x54, 0xe8, 0x01, 0x00,
	0x08, 0x21, 0x00, 0x00, 0x08, 0x02, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x40, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x3d, 0x01, 0x04, 0x04, 0xf1,
	0xa0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x93, 0x2d, 0x00,
	0x80, 0x0b, 0x00, 0x00, 0x00, 0x87, 0x00, 0x00, 0xc0, 0x04, 0x00, 0x00,
	0x00, 0x05, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00,
	0x00, 0x0b, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00,
	0x00, 0x0c, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00,
	0x00, 0x04, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x02, 0x02, 0x04,
	0x08, 0x12, 0x0d, 0x16, 0x00, 0x13, 0x22, 0x4c, 0x70, 0x00, 0x00, 0x1f,
	0x00, 0x00, 0x00, 0x00, 0xe8, 0x49, 0xff, 0x00, 0xff, 0x40, 0x00, 0x00,
	0x00, 0xff, 0xff, 0x1f, 0x00, 0x01, 0x00, 0x00, 0x00, 0x71, 0x1d, 0x00,
	0x80, 0x02, 0x00, 0x10, 0x80, 0x18, 0x00, 0x20, 0x80, 0x00, 0x00, 0x00,
	0x00
            })
            Name(EMC5, Buffer(0x901)
            {
	0x32, 0x38, 0xc7, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00,
	0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00,
	0x00, 0x0a, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00,
	0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00,
	0x00, 0x05, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00,
	0x00, 0x0b, 0x00, 0x00, 0x00, 0x81, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x60, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00,
	0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00,
	0x00, 0x0f, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00,
	0x00, 0x04, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x04, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x8e, 0x01, 0x00,
	0x00, 0x06, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x88, 0x42, 0x00, 0x00, 0xa4, 0x00, 0x78,
	0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0xc0, 0x0f, 0x00, 0x00, 0xc0, 0x0f,
	0x00, 0x00, 0xc0, 0x0f, 0x00, 0x00, 0xc0, 0x0f, 0x00, 0x00, 0xc0, 0x0f,
	0x00, 0x00, 0xc0, 0x0f, 0x00, 0x00, 0xc0, 0x0f, 0x00, 0x00, 0xc0, 0x0f,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x0f, 0x00, 0x00, 0xc0, 0x0f,
	0x00, 0x00, 0xc0, 0x0f, 0x00, 0x00, 0xc0, 0x0f, 0x00, 0xa0, 0x02, 0x00,
	0x00, 0x1c, 0x21, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x84, 0xf8, 0xff,
	0x77, 0x08, 0xf1, 0xf1, 0x01, 0x04, 0x74, 0x05, 0x05, 0x07, 0x00, 0x00,
	0x54, 0x68, 0x01, 0x00, 0x08, 0x00, 0x00, 0x00, 0x08, 0x02, 0x08, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x0c,
	0x00, 0x00, 0x00, 0xf1, 0xa0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x0b, 0x04, 0x00, 0x80, 0x01, 0x00, 0x01, 0x00, 0x10, 0x00, 0x00,
	0xc0, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00,
	0x00, 0x03, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00,
	0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00,
	0x00, 0x02, 0x01, 0x02, 0x06, 0x02, 0x05, 0x0a, 0x00, 0x03, 0x03, 0xe3,
	0x74, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00, 0x00, 0xe8, 0x00, 0xff, 0x00,
	0xff, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0x1f, 0x00, 0x01, 0x00, 0x00,
	0x00, 0x21, 0x12, 0x00, 0x80, 0x03, 0x00, 0x10, 0x80, 0x08, 0x00, 0x20,
	0x80, 0x01, 0x00, 0x00, 0x00, 0x32, 0x70, 0x8e, 0x01, 0x00, 0x04, 0x00,
	0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00,
	0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x05, 0x00,
	0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00,
	0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x04, 0x00,
	0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x03, 0x03,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x02, 0x00,
	0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x20, 0x00,
	0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x05, 0x00,
	0x00, 0x00, 0x1c, 0x03, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x04, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x88, 0x42,
	0x00, 0x00, 0xa4, 0x00, 0x78, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0xc0,
	0x0f, 0x00, 0x00, 0xc0, 0x0f, 0x00, 0x00, 0xc0, 0x0f, 0x00, 0x00, 0xc0,
	0x0f, 0x00, 0x00, 0xc0, 0x0f, 0x00, 0x00, 0xc0, 0x0f, 0x00, 0x00, 0xc0,
	0x0f, 0x00, 0x00, 0xc0, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0,
	0x0f, 0x00, 0x00, 0xc0, 0x0f, 0x00, 0x00, 0xc0, 0x0f, 0x00, 0x00, 0xc0,
	0x0f, 0x00, 0xa0, 0x02, 0x00, 0x00, 0x1c, 0x21, 0x00, 0x08, 0x00, 0x00,
	0x00, 0x00, 0x84, 0xf8, 0xff, 0x77, 0x08, 0xf1, 0xf1, 0x01, 0x04, 0x74,
	0x05, 0x05, 0x07, 0x00, 0x00, 0x54, 0x68, 0x01, 0x00, 0x08, 0x00, 0x00,
	0x00, 0x08, 0x02, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00,
	0x00, 0x00, 0x0c, 0x00, 0x0c, 0x00, 0x00, 0x00, 0xf1, 0xa0, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0x07, 0x00, 0x80, 0x01, 0x00,
	0x00, 0x00, 0x18, 0x00, 0x00, 0xc0, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00,
	0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00,
	0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x08, 0x00,
	0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00,
	0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x02, 0x01, 0x02, 0x06, 0x03, 0x05,
	0x0a, 0x00, 0x04, 0x05, 0x43, 0x74, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00,
	0x00, 0xe8, 0x00, 0xff, 0x00, 0xff, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x1f, 0x00, 0x01, 0x00, 0x00, 0x00, 0x21, 0x12, 0x00, 0x80, 0x03, 0x00,
	0x10, 0x80, 0x08, 0x00, 0x20, 0x80, 0x01, 0x00, 0x00, 0x00, 0x32, 0xe0,
	0x1c, 0x03, 0x00, 0x09, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x00, 0x00, 0x07,
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x0a,
	0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x02,
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x06,
	0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x0b,
	0x00, 0x00, 0x00, 0x07, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x81,
	0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x0f,
	0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x04,
	0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04,
	0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x38, 0x06, 0x00, 0x00, 0x07,
	0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x88, 0x42, 0x00, 0x00, 0xa4, 0x00, 0x44, 0x00, 0x00,
	0x80, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00,
	0x00, 0x08, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00,
	0x00, 0x08, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00,
	0x00, 0x08, 0x00, 0x00, 0x00, 0x08, 0x00, 0xa0, 0x02, 0x00, 0x00, 0x1c,
	0x21, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x84, 0xf8, 0xff, 0x77, 0x08,
	0xf1, 0xf1, 0x01, 0x04, 0x74, 0x05, 0x05, 0x07, 0x00, 0x00, 0x54, 0x68,
	0x01, 0x00, 0x08, 0x00, 0x00, 0x00, 0x08, 0x02, 0x08, 0x00, 0x00, 0x00,
	0x00, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x0c, 0x00, 0x0c, 0x00, 0x00,
	0x00, 0xf1, 0xa0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x22,
	0x0d, 0x00, 0x80, 0x03, 0x00, 0x00, 0x00, 0x25, 0x00, 0x00, 0xc0, 0x01,
	0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x02,
	0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x03,
	0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01,
	0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x02,
	0x01, 0x02, 0x06, 0x05, 0x05, 0x0a, 0x00, 0x06, 0x0a, 0x04, 0x74, 0x00,
	0x00, 0x1f, 0x00, 0x00, 0x00, 0x00, 0xe8, 0x00, 0xff, 0x00, 0xff, 0x40,
	0x00, 0x00, 0x00, 0xff, 0xff, 0x1f, 0x00, 0x01, 0x00, 0x00, 0x00, 0x21,
	0x12, 0x00, 0x80, 0x03, 0x00, 0x10, 0x80, 0x08, 0x00, 0x20, 0x80, 0x01,
	0x00, 0x00, 0x00, 0x32, 0xd8, 0xb8, 0x05, 0x00, 0x11, 0x00, 0x00, 0x00,
	0x6f, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
	0x03, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
	0x0a, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
	0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x04, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
	0x0a, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x2d, 0x0b, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0xcb, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
	0x08, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x07, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x75, 0x00, 0x00, 0x00,
	0x00, 0x02, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,
	0x6d, 0x0b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x88, 0x70, 0x00, 0x00,
	0x84, 0x00, 0x20, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x80, 0x03, 0x00,
	0x00, 0x80, 0x03, 0x00, 0x00, 0x80, 0x03, 0x00, 0x00, 0x80, 0x03, 0x00,
	0x00, 0x80, 0x02, 0x00, 0x00, 0x80, 0x02, 0x00, 0x00, 0x80, 0x02, 0x00,
	0x00, 0x80, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00,
	0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x05, 0x00,
	0xa0, 0x02, 0x00, 0x00, 0x3d, 0x01, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00,
	0x84, 0xf8, 0xff, 0x77, 0x08, 0xf5, 0xf1, 0x01, 0x04, 0x74, 0x05, 0x05,
	0x07, 0x00, 0x00, 0x54, 0xe8, 0x01, 0x00, 0x08, 0x21, 0x00, 0x00, 0x08,
	0x02, 0x08, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x01, 0x00, 0x00,
	0x0c, 0x00, 0x50, 0x01, 0x00, 0x00, 0xf1, 0xa0, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x4b, 0x17, 0x00, 0x80, 0x05, 0x00, 0x00, 0x00,
	0x44, 0x00, 0x00, 0xc0, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
	0x09, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,
	0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
	0x02, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
	0x06, 0x00, 0x00, 0x00, 0x02, 0x02, 0x03, 0x06, 0x09, 0x07, 0x0d, 0x00,
	0x0a, 0x11, 0x86, 0x70, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00, 0x00, 0xe8,
	0x89, 0xff, 0x00, 0xff, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0x1f, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x21, 0x05, 0x00, 0x80, 0x02, 0x00, 0x10, 0x80,
	0x00, 0x00, 0x20, 0x80, 0x00, 0x00, 0x00, 0x00, 0x32, 0xb0, 0x71, 0x0b,
	0x00, 0x23, 0x00, 0x00, 0x00, 0xdf, 0x00, 0x00, 0x00, 0x19, 0x00, 0x00,
	0x00, 0x09, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00,
	0x00, 0x04, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00,
	0x00, 0x09, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00,
	0x00, 0x09, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00,
	0x00, 0x9a, 0x16, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa6, 0x05, 0x00,
	0x00, 0x03, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00,
	0x00, 0xe9, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x05, 0x00, 0x00,
	0x00, 0x17, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00,
	0x00, 0x08, 0x00, 0x00, 0x00, 0xda, 0x16, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x88, 0x50, 0x00, 0x00, 0x91, 0x01, 0x08, 0xf0, 0x00, 0x80, 0x00,
	0x00, 0x08, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00,
	0x00, 0x08, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00,
	0x00, 0x10, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x08, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00,
	0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x0c, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00,
	0x00, 0x0c, 0x00, 0x00, 0x00, 0xa0, 0x02, 0x00, 0x00, 0x3d, 0x01, 0x00,
	0x0a, 0x00, 0x00, 0x00, 0x00, 0x84, 0xf8, 0xff, 0x77, 0x01, 0xf5, 0xf1,
	0x01, 0x04, 0x74, 0x07, 0x07, 0x00, 0x00, 0x00, 0x54, 0xe8, 0x01, 0x00,
	0x08, 0x21, 0x00, 0x00, 0x0a, 0x02, 0x08, 0x00, 0x00, 0x00, 0x00, 0x02,
	0x00, 0x00, 0x01, 0x00, 0x00, 0x0c, 0x00, 0xdf, 0x00, 0x06, 0x06, 0xf1,
	0xa0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x93, 0x2d, 0x00,
	0x80, 0x0b, 0x00, 0x00, 0x00, 0x87, 0x00, 0x00, 0xc0, 0x04, 0x00, 0x00,
	0x00, 0x05, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00,
	0x00, 0x0b, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00,
	0x00, 0x0c, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00,
	0x00, 0x04, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x02, 0x02, 0x04,
	0x08, 0x12, 0x0d, 0x16, 0x00, 0x13, 0x22, 0x0c, 0x71, 0x00, 0x00, 0x1f,
	0x00, 0x00, 0x00, 0x00, 0xe8, 0x49, 0xff, 0x00, 0xff, 0x40, 0x00, 0x00,
	0x00, 0xff, 0xff, 0x1f, 0x00, 0x01, 0x00, 0x00, 0x00, 0x71, 0x0d, 0x00,
	0x80, 0x02, 0x00, 0x10, 0x80, 0x18, 0x00, 0x20, 0x80, 0x00, 0x00, 0x00,
	0x00
            })
            Method(DVFS, 0x0, NotSerialized)
            {
                If(^^STRP == 0x2)
                {
                    Return(^EMC2)
                }
                Else
                {
                    If(^^STRP == 0x3)
                    {
                        If(\_SB_.BDID == 0x2)
                        {
                            Return(^EMC5)
                        }
                        Else
                        {
                            Return(^EMC3)
                        }
                    }
                    Else
                    {
                        If(\_SB_.BDID == 0x2)
                        {
                            Return(^EMC4)
                        }
                        Else
                        {
                            Return(^EMC1)
                        }
                    }
                }
            }
            Name(INFO, One)
        }
        Scope(\_SB_)
        {
            OperationRegion(OEMM, SystemMemory, GETP, GETL)
            Field(OEMM, ByteAcc, NoLock, Preserve)
            {
                BDID, 8,
                BMCE, 8,
                DDIS, 1
            }
        }
        Scope(\_SB_)
        {
            Name(BFVM, 0xa)
            Name(BFVN, Zero)
            Scope(GPIO)
            {
                Name(GCC7, Buffer(0x25)
                {
	0x8c, 0x20, 0x00, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x17, 0x00, 0x00, 0x19, 0x00, 0x23, 0x00, 0x00, 0x00, 0xe7,
	0x00, 0x5c, 0x5f, 0x53, 0x42, 0x2e, 0x47, 0x50, 0x49, 0x4f, 0x00, 0x79,
	0x00
                })
                Method(_E48, 0x0, NotSerialized)
                {
                    If(\_SB_.I2C5.AVBL == Zero)
                    {
                        Return(Zero)
                    }
                    Notify(\_SB_.BAT0, 0x81)
                    Notify(\_SB_.ADP0, 0x80)
                }
            }
            Name(GPN3, Buffer(0x25)
            {
	0x8c, 0x20, 0x00, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x17, 0x00, 0x00, 0x19, 0x00, 0x23, 0x00, 0x00, 0x00, 0x6b,
	0x00, 0x5c, 0x5f, 0x53, 0x42, 0x2e, 0x47, 0x50, 0x49, 0x4f, 0x00, 0x79,
	0x00
            })
            Field(\_SB_.GPIO.GPWR, ByteAcc, NoLock, Preserve)
            {
                Connection(\_SB_.GPN3),
                SNSN, 1
            }
            Field(\_SB_.GPIO.GPZZ, ByteAcc, NoLock, Preserve)
            {
                Connection(\_SB_.GPIO.GCC7),
                TSCG, 1
            }
            Method(TGCH, 0x1, Serialized)
            {
                While(One)
                {
                    Name(_T_0, 0x0)
                    _T_0 = Arg0
                    If(_T_0 == Zero)
                    {
                        ^TSCG = Zero
                    }
                    Else
                    {
                        If(_T_0 == One)
                        {
                            ^TSCG = One
                        }
                        Else
                        {
                            If(_T_0 == 0x2)
                            {
                                Local0 = ^TSCG
                                Local2 = ~Local0
                                ^TSCG = Local2
                                Sleep(0x14)
                                ^TSCG = Local0
                            }
                        }
                    }
                    Break
                }
            }
            Name(FFUB, Buffer(0x2)
            {
	0xff, 0xff
            })
            CreateWordField(FFUB, Zero, BAFW)
            Name(SPCS, Zero)
            Method(SPCC, 0x1, Serialized)
            {
                If(!(Arg0 == Zero))
                {
                    ^SPCS++
                    If(!(\_SB_.BDID < 0x3))
                    {
                        If(!(\_SB_.GPIO.AVBL == Zero))
                        {
                            ^SNSN = One
                            Sleep(One)
                        }
                    }
                }
                Else
                {
                    If(!(^SPCS == Zero))
                    {
                        ^SPCS--
                    }
                    If(!(\_SB_.BDID < 0x3))
                    {
                        If(!(\_SB_.GPIO.AVBL == Zero))
                        {
                            BAFW = \_SB_.BFVM
                            BAFW = \_SB_.BFVM << 0x8
                            BAFW = \_SB_.BFVN | BAFW
                            If((^SPCS == Zero) && (!(BAFW < 0xa0a)))
                            {
                                ^SNSN = Zero
                                Sleep(One)
                            }
                        }
                    }
                }
            }
            Device(ADP0)
            {
                Name(_HID, "ACPI0003")
                Name(BUFF, Buffer(0x22)
                {
                })
                CreateByteField(BUFF, Zero, STAT)
                CreateByteField(BUFF, One, LEN_)
                CreateByteField(BUFF, 0x2, DATB)
                CreateWordField(BUFF, 0x2, DATW)
                Method(_STA, 0x0, NotSerialized)
                {
                    If(!(\_SB_.I2C5.AVBL == Zero))
                    {
                        \_SB_.SPCC(One)
                        BUFF = \_SB_.I2C5.BB04
                        If(!(STAT == Zero))
                        {
                            BUFF = \_SB_.I2C5.BB04
                        }
                        If(!(STAT == Zero))
                        {
                            BUFF = \_SB_.I2C5.BB04
                        }
                        If(!(STAT == Zero))
                        {
                            BUFF = \_SB_.I2C5.BB04
                        }
                        If(STAT == Zero)
                        {
                            \_SB_.BFVM = DATB
                        }
                        BUFF = \_SB_.I2C5.BB05
                        If(STAT == Zero)
                        {
                            \_SB_.BFVN = DATB
                        }
                        \_SB_.SPCC(Zero)
                    }
                    Return(0xf)
                }
                Method(_PSR, 0x0, NotSerialized)
                {
                    Local7 = Zero
                    If(\_SB_.I2C5.AVBL == Zero)
                    {
                        \_SB_.TGCH(Zero)
                        Return(Zero)
                    }
                    \_SB_.SPCC(One)
                    If(!(\_SB_.BFVM > 0x9))
                    {
                        BUFF = \_SB_.I2C5.BB01
                    }
                    Else
                    {
                        BUFF = \_SB_.I2C5.BB67
                    }
                    If(STAT == Zero)
                    {
                        Local0 = DATB & One
                        If(Local0)
                        {
                            Local7 = One
                        }
                        \_SB_.TGCH(Local7)
                    }
                    \_SB_.SPCC(Zero)
                    Return(Local7)
                }
                Method(_PCL, 0x0, NotSerialized)
                {
                    Return(Package(0x2)
                    {
                        \_SB_,
                        BAT0
                    })
                }
                Name(_DEP, Package(0x2)
                {
                    \_SB_.I2C5,
                    \_SB_.GPIO
                })
            }
            Device(BAT0)
            {
                Name(_HID, 0xa0cd041)
                Method(_DSM, 0x4, NotSerialized)
                {
                    If(Arg0 == (Buffer(0x10)
                    {
	0xe3, 0x67, 0x20, 0x4c, 0x7d, 0x88, 0x5c, 0x47, 0x97, 0x20, 0x4a, 0xf1,
	0xd3, 0xed, 0x60, 0x2e
                    }))
                    {
                        If(Arg2 == Zero)
                        {
                            If(Arg1 == Zero)
                            {
                                Return(Buffer(One)
                                {
	0x0f
                                })
                            }
                        }
                        If(Arg1 == Zero)
                        {
                            If(Arg2 == One)
                            {
                                \_SB_.SPCC(One)
                                DATB = (DerefOf(Arg3[Zero]))
                                If(!(\_SB_.BFVM > 0x9))
                                {
                                    \_SB_.I2C5.BB0D = BUFF
                                }
                                Else
                                {
                                    \_SB_.I2C5.BB00 = BUFF
                                }
                                \_SB_.SPCC(Zero)
                            }
                            If(Arg2 == 0x2)
                            {
                                Return(Zero)
                            }
                        }
                    }
                    Else
                    {
                        Return(Buffer(One)
                        {
	0x00
                        })
                    }
                }
                Name(_PCL, Package(One)
                {
                    \_SB_
                })
                Name(_DEP, Package(0x2)
                {
                    \_SB_.I2C5,
                    \_SB_.GPIO
                })
                Name(BIX0, Package(0x14)
                {
                    Zero,
                    One,
                    0xffffffff,
                    0xffffffff,
                    One,
                    0xffffffff,
                    0xffffffff,
                    0xffffffff,
                    0xffffffff,
                    0x17318,
                    0xffffffff,
                    0xffffffff,
                    0x3e8,
                    0x3e8,
                    Zero,
                    Zero,
                    "Unknown ",
                    "FFFF",
                    "LION",
                    "Unknown     "
                })
                Name(BST0, Package(0x4)
                {
                    Zero,
                    Zero,
                    Zero,
                    Zero
                })
                Name(BUFF, Buffer(0x22)
                {
                })
                CreateByteField(BUFF, Zero, STAT)
                CreateByteField(BUFF, One, LEN_)
                CreateByteField(BUFF, 0x2, DATB)
                CreateWordField(BUFF, 0x2, DATW)
                Name(BPSN, Zero)
                Name(BATL, Zero)
                Method(_STA, 0x0, NotSerialized)
                {
                    BPSN = Zero
                    Local7 = 0xf
                    \_SB_.SPCC(One)
                    If(!(\_SB_.I2C5.AVBL == Zero))
                    {
                        BUFF = \_SB_.I2C5.BB04
                        If(!(STAT == Zero))
                        {
                            BUFF = \_SB_.I2C5.BB04
                        }
                        If(!(STAT == Zero))
                        {
                            BUFF = \_SB_.I2C5.BB04
                        }
                        If(!(STAT == Zero))
                        {
                            BUFF = \_SB_.I2C5.BB04
                        }
                        If(STAT == Zero)
                        {
                            \_SB_.BFVM = DATB
                        }
                        BUFF = \_SB_.I2C5.BB05
                        If(STAT == Zero)
                        {
                            \_SB_.BFVN = DATB
                        }
                        If((!(\_SB_.BDID == Zero)) || (!(\_SB_.BMCE == Zero)))
                        {
                            If(!(\_SB_.BFVM > 0x9))
                            {
                                BUFF = \_SB_.I2C5.BB01
                            }
                            Else
                            {
                                BUFF = \_SB_.I2C5.BB67
                            }
                            If(STAT == Zero)
                            {
                                Local0 = DATB & 0x2
                                If(Local0)
                                {
                                    BPSN = One
                                    Local7 = 0x1f
                                }
                            }
                        }
                    }
                    \_SB_.SPCC(Zero)
                    Return(Local7)
                }
                Method(BGMN, 0x0, NotSerialized)
                {
                    Name(UNMN, Buffer(0x9)
                    {
	0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x20, 0x20, 0x00
                    })
                    Name(MNTE, Buffer(0x9)
                    {
                    })
                    If(\_SB_.I2C5.AVBL == Zero)
                    {
                        Return(UNMN)
                    }
                    If(BPSN == Zero)
                    {
                        Return(UNMN)
                    }
                    BUFF = \_SB_.I2C5.BB52
                    If(!(STAT == Zero))
                    {
                        Return(UNMN)
                    }
                    MNTE[Zero] = DATB
                    BUFF = \_SB_.I2C5.BB53
                    If(!(STAT == Zero))
                    {
                        Return(UNMN)
                    }
                    MNTE[One] = DATB
                    BUFF = \_SB_.I2C5.BB54
                    If(!(STAT == Zero))
                    {
                        Return(UNMN)
                    }
                    MNTE[0x2] = DATB
                    BUFF = \_SB_.I2C5.BB55
                    If(!(STAT == Zero))
                    {
                        Return(UNMN)
                    }
                    MNTE[0x3] = DATB
                    BUFF = \_SB_.I2C5.BB56
                    If(!(STAT == Zero))
                    {
                        Return(UNMN)
                    }
                    MNTE[0x4] = DATB
                    BUFF = \_SB_.I2C5.BB57
                    If(!(STAT == Zero))
                    {
                        Return(UNMN)
                    }
                    MNTE[0x5] = DATB
                    BUFF = \_SB_.I2C5.BB58
                    If(!(STAT == Zero))
                    {
                        Return(UNMN)
                    }
                    MNTE[0x6] = DATB
                    BUFF = \_SB_.I2C5.BB59
                    If(!(STAT == Zero))
                    {
                        Return(UNMN)
                    }
                    MNTE[0x7] = DATB
                    MNTE[0x8] = Zero
                    Return(MNTE)
                }
                Method(BGSN, 0x0, NotSerialized)
                {
                    Name(UNSN, Buffer(0x3)
                    {
	0xff, 0xff, 0x00
                    })
                    Name(SNTE, Buffer(0x4)
                    {
                    })
                    If(\_SB_.I2C5.AVBL == Zero)
                    {
                        Return(UNSN)
                    }
                    If(BPSN == Zero)
                    {
                        Return(UNSN)
                    }
                    BUFF = \_SB_.I2C5.BB45
                    If(!(STAT == Zero))
                    {
                        Return(UNSN)
                    }
                    Local0 = DATB
                    Local1 = Local0 >> 0x4
                    Local1 = Local1 & 0xf
                    SNTE[Zero] = BTCH(Local1)
                    Local1 = Local0 & 0xf
                    SNTE[One] = BTCH(Local1)
                    BUFF = \_SB_.I2C5.BB44
                    If(!(STAT == Zero))
                    {
                        Return(UNSN)
                    }
                    Local0 = DATB
                    Local1 = Local0 >> 0x4
                    Local1 = Local1 & 0xf
                    SNTE[0x2] = BTCH(Local1)
                    Local1 = Local0 & 0xf
                    SNTE[0x3] = BTCH(Local1)
                    Return(SNTE)
                }
                Method(BTCH, 0x1, NotSerialized)
                {
                    If(Arg0 > 0x9)
                    {
                        Local0 = Arg0 + 0x37
                    }
                    Else
                    {
                        Local0 = Arg0 + 0x30
                    }
                    Return(Local0)
                }
                Method(BGBT, 0x0, NotSerialized)
                {
                    Name(UNBT, Buffer(0x5)
                    {
	0x4c, 0x49, 0x4f, 0x4e, 0x00
                    })
                    Name(BTTE, Buffer(0x5)
                    {
                    })
                    If(\_SB_.I2C5.AVBL == Zero)
                    {
                        Return(UNBT)
                    }
                    If(BPSN == Zero)
                    {
                        Return(UNBT)
                    }
                    BUFF = \_SB_.I2C5.BB5A
                    If(!(STAT == Zero))
                    {
                        Return(UNBT)
                    }
                    BTTE[Zero] = DATB
                    BUFF = \_SB_.I2C5.BB5B
                    If(!(STAT == Zero))
                    {
                        Return(UNBT)
                    }
                    BTTE[One] = DATB
                    BUFF = \_SB_.I2C5.BB5C
                    If(!(STAT == Zero))
                    {
                        Return(UNBT)
                    }
                    BTTE[0x2] = DATB
                    BUFF = \_SB_.I2C5.BB5D
                    If(!(STAT == Zero))
                    {
                        Return(UNBT)
                    }
                    BTTE[0x3] = DATB
                    BTTE[0x4] = Zero
                    Return(BTTE)
                }
                Method(BGOE, 0x0, NotSerialized)
                {
                    Name(UNOE, Buffer(0xc)
                    {
	0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x00
                    })
                    Name(BTOE, Buffer(0xc)
                    {
                    })
                    If(\_SB_.I2C5.AVBL == Zero)
                    {
                        Return(UNOE)
                    }
                    If(BPSN == Zero)
                    {
                        Return(UNOE)
                    }
                    BUFF = \_SB_.I2C5.BB46
                    If(!(STAT == Zero))
                    {
                        Return(UNOE)
                    }
                    BTOE[Zero] = DATB
                    BUFF = \_SB_.I2C5.BB47
                    If(!(STAT == Zero))
                    {
                        Return(UNOE)
                    }
                    BTOE[One] = DATB
                    BUFF = \_SB_.I2C5.BB48
                    If(!(STAT == Zero))
                    {
                        Return(UNOE)
                    }
                    BTOE[0x2] = DATB
                    BUFF = \_SB_.I2C5.BB49
                    If(!(STAT == Zero))
                    {
                        Return(UNOE)
                    }
                    BTOE[0x3] = DATB
                    BUFF = \_SB_.I2C5.BB4A
                    If(!(STAT == Zero))
                    {
                        Return(UNOE)
                    }
                    BTOE[0x4] = DATB
                    BUFF = \_SB_.I2C5.BB4B
                    If(!(STAT == Zero))
                    {
                        Return(UNOE)
                    }
                    BTOE[0x5] = DATB
                    BUFF = \_SB_.I2C5.BB4C
                    If(!(STAT == Zero))
                    {
                        Return(UNOE)
                    }
                    BTOE[0x6] = DATB
                    BUFF = \_SB_.I2C5.BB4D
                    If(!(STAT == Zero))
                    {
                        Return(UNOE)
                    }
                    BTOE[0x7] = DATB
                    BUFF = \_SB_.I2C5.BB4E
                    If(!(STAT == Zero))
                    {
                        Return(UNOE)
                    }
                    BTOE[0x8] = DATB
                    BUFF = \_SB_.I2C5.BB4F
                    If(!(STAT == Zero))
                    {
                        Return(UNOE)
                    }
                    BTOE[0x9] = DATB
                    BUFF = \_SB_.I2C5.BB50
                    If(!(STAT == Zero))
                    {
                        Return(UNOE)
                    }
                    BTOE[0xa] = DATB
                    BUFF = \_SB_.I2C5.BB51
                    If(!(STAT == Zero))
                    {
                        Return(UNOE)
                    }
                    BTOE[0xb] = DATB
                    Return(BTOE)
                }
                Method(_BIX, 0x0, NotSerialized)
                {
                    \_SB_.SPCC(One)
                    If(!(\_SB_.I2C5.AVBL == Zero))
                    {
                        BUFF = \_SB_.I2C5.BB3D
                        If(STAT == Zero)
                        {
                            Local0 = DATB << 0x8
                            BUFF = \_SB_.I2C5.BB3C
                            If(STAT == Zero)
                            {
                                Local0 = DATB | Local0
                                BIX0[0x2] = Local0
                                Local3 = Local0 / 0xa
                                BIX0[0x6] = Local3
                                Local3 = Local0 / 0x21
                                BIX0[0x7] = Local3
                                BATL = Local3
                                Local3 = Local0 / 0x64
                                BIX0[0xe] = Local3
                                BIX0[0xf] = Local3
                            }
                        }
                        BUFF = \_SB_.I2C5.BB2D
                        If(STAT == Zero)
                        {
                            Local1 = DATB << 0x8
                            BUFF = \_SB_.I2C5.BB2C
                            If(STAT == Zero)
                            {
                                Local1 = DATB | Local1
                                BIX0[0x3] = Local1
                            }
                        }
                        BUFF = \_SB_.I2C5.BB3F
                        If(STAT == Zero)
                        {
                            Local1 = DATB << 0x8
                            BUFF = \_SB_.I2C5.BB3E
                            If(STAT == Zero)
                            {
                                Local1 = DATB | Local1
                                BIX0[0x5] = Local1
                            }
                        }
                        BUFF = \_SB_.I2C5.BB3B
                        If(STAT == Zero)
                        {
                            Local1 = DATB << 0x8
                            BUFF = \_SB_.I2C5.BB3A
                            If(STAT == Zero)
                            {
                                Local1 = DATB | Local1
                                BIX0[0x8] = Local1
                            }
                        }
                        CopyObject(BGMN(), BIX0[0x10])
                        CopyObject(BGSN(), BIX0[0x11])
                        CopyObject(BGBT(), BIX0[0x12])
                        CopyObject(BGOE(), BIX0[0x13])
                    }
                    \_SB_.SPCC(Zero)
                    Return(BIX0)
                }
                Method(_BST, 0x0, NotSerialized)
                {
                    \_SB_.SPCC(One)
                    If(!(\_SB_.I2C5.AVBL == Zero))
                    {
                        Local2 = Zero
                        BUFF = \_SB_.I2C5.BB02
                        If(STAT == Zero)
                        {
                            Local0 = DATB
                            Local1 = Local0 & One
                            If(Local1)
                            {
                                Local2 = Local2 | 0x2
                            }
                            Else
                            {
                                Local2 = Local2 | One
                            }
                        }
                        BUFF = \_SB_.I2C5.BB29
                        If(STAT == Zero)
                        {
                            Local5 = DATB << 0x8
                            BUFF = \_SB_.I2C5.BB28
                            If(STAT == Zero)
                            {
                                Local5 = DATB | Local5
                                BUFF = \_SB_.I2C5.BB2D
                                If(STAT == Zero)
                                {
                                    Local6 = DATB << 0x8
                                    BUFF = \_SB_.I2C5.BB2C
                                    If(STAT == Zero)
                                    {
                                        Local6 = DATB | Local6
                                        Local3 = Local5 * Local6
                                        Local3 = Local3 / 0x64
                                        BST0[0x2] = Local3
                                        Local4 = BATL
                                        If(Local3 < Local4)
                                        {
                                            Local2 = Local2 | 0x4
                                        }
                                        BST0[Zero] = Local2
                                        BUFF = \_SB_.I2C5.BB25
                                        If(STAT == Zero)
                                        {
                                            Local4 = DATB << 0x8
                                            BUFF = \_SB_.I2C5.BB24
                                            If(STAT == Zero)
                                            {
                                                Local4 = DATB | Local4
                                                If(Local4 > 0x7fff)
                                                {
                                                    BST0[One] = 0x10000 - Local4
                                                }
                                                Else
                                                {
                                                    BST0[One] = Local4
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                        BUFF = \_SB_.I2C5.BB21
                        If(STAT == Zero)
                        {
                            Local4 = DATB << 0x8
                            BUFF = \_SB_.I2C5.BB20
                            If(STAT == Zero)
                            {
                                BST0[0x3] = DATB | Local4
                            }
                        }
                    }
                    \_SB_.SPCC(Zero)
                    Return(BST0)
                }
                Name(BATC, Zero)
                Method(_BTP, 0x1, NotSerialized)
                {
                    If(\_SB_.I2C5.AVBL == Zero)
                    {
                        Return(\_SB_.SPCC(One))
                    }
                    If(Arg0 == Zero)
                    {
                        DATB = Zero
                        If(!(\_SB_.BFVM > 0x9))
                        {
                            \_SB_.I2C5.BB67 = BUFF
                        }
                        Else
                        {
                            \_SB_.I2C5.BB01 = BUFF
                        }
                        \_SB_.SPCC(Zero)
                        Return(Local0 = BATC)
                    }
                    If(Local0 == Zero)
                    {
                        BUFF = \_SB_.I2C5.BB3D
                        If(!(STAT == Zero))
                        {
                            DATB = Zero
                            If(!(\_SB_.BFVM > 0x9))
                            {
                                \_SB_.I2C5.BB67 = BUFF
                            }
                            Else
                            {
                                \_SB_.I2C5.BB01 = BUFF
                            }
                            \_SB_.SPCC(Zero)
                            Return(Local0 = DATB << 0x8)
                        }
                        BUFF = \_SB_.I2C5.BB3C
                        If(!(STAT == Zero))
                        {
                            DATB = Zero
                            If(!(\_SB_.BFVM > 0x9))
                            {
                                \_SB_.I2C5.BB67 = BUFF
                            }
                            Else
                            {
                                \_SB_.I2C5.BB01 = BUFF
                            }
                            \_SB_.SPCC(Zero)
                            Return(Local0 = DATB | Local0)
                        }
                        BATC = Local0
                    }
                    Local2 = 0x64 * Arg0
                    Local2 = Local2 / BATC
                    DATB = Local2
                    If(!(\_SB_.BFVM > 0x9))
                    {
                        \_SB_.I2C5.BB67 = BUFF
                    }
                    Else
                    {
                        \_SB_.I2C5.BB01 = BUFF
                    }
                    \_SB_.SPCC(Zero)
                }
            }
            Scope(\_SB_.I2C5)
            {
                Name(TRO1, Buffer(0x1e)
                {
	0x8e, 0x19, 0x00, 0x01, 0x00, 0x01, 0x02, 0x00, 0x00, 0x01, 0x06, 0x00,
	0x80, 0x1a, 0x06, 0x00, 0x0a, 0x00, 0x5c, 0x5f, 0x53, 0x42, 0x2e, 0x49,
	0x32, 0x43, 0x35, 0x00, 0x79, 0x00
                })
                OperationRegion(BATO, GenericSerialBus, Zero, 0x100)
                Field(BATO, BufferAcc, NoLock, Preserve)
                {
                    Connection(\_SB_.I2C5.TRO1),
                    AccessAs(BufferAcc, 0x6),
                    BB00, 8,
                    BB01, 8,
                    BB02, 8,
                    BB03, 8,
                    BB04, 8,
                    BB05, 8,
                    BB06, 8,
                    BB07, 8,
                    BB08, 8,
                    BB09, 8,
                    BB0A, 8,
                    BB0B, 8,
                    BB0C, 8,
                    BB0D, 8,
                    BB0E, 8,
                    BB0F, 8,
                    BB10, 8,
                    BB11, 8,
                    BB12, 8,
                    BB13, 8,
                    BB14, 8,
                    BB15, 8,
                    BB16, 8,
                    BB17, 8,
                    BB18, 8,
                    BB19, 8,
                    BB1A, 8,
                    BB1B, 8,
                    BB1C, 8,
                    BB1D, 8,
                    BB1E, 8,
                    BB1F, 8,
                    BB20, 8,
                    BB21, 8,
                    BB22, 8,
                    BB23, 8,
                    BB24, 8,
                    BB25, 8,
                    BB26, 8,
                    BB27, 8,
                    BB28, 8,
                    BB29, 8,
                    BB2A, 8,
                    BB2B, 8,
                    BB2C, 8,
                    BB2D, 8,
                    BB2E, 8,
                    BB2F, 8,
                    BB30, 8,
                    BB31, 8,
                    BB32, 8,
                    BB33, 8,
                    BB34, 8,
                    BB35, 8,
                    BB36, 8,
                    BB37, 8,
                    BB38, 8,
                    BB39, 8,
                    BB3A, 8,
                    BB3B, 8,
                    BB3C, 8,
                    BB3D, 8,
                    BB3E, 8,
                    BB3F, 8,
                    BB40, 8,
                    BB41, 8,
                    BB42, 8,
                    BB43, 8,
                    BB44, 8,
                    BB45, 8,
                    BB46, 8,
                    BB47, 8,
                    BB48, 8,
                    BB49, 8,
                    BB4A, 8,
                    BB4B, 8,
                    BB4C, 8,
                    BB4D, 8,
                    BB4E, 8,
                    BB4F, 8,
                    BB50, 8,
                    BB51, 8,
                    BB52, 8,
                    BB53, 8,
                    BB54, 8,
                    BB55, 8,
                    BB56, 8,
                    BB57, 8,
                    BB58, 8,
                    BB59, 8,
                    BB5A, 8,
                    BB5B, 8,
                    BB5C, 8,
                    BB5D, 8,
                    BB5E, 8,
                    BB5F, 8,
                    BB60, 8,
                    BB61, 8,
                    BB62, 8,
                    BB63, 8,
                    BB64, 8,
                    BB65, 8,
                    BB66, 8,
                    BB67, 8,
                    BB68, 8,
                    BB69, 8,
                    BB6A, 8,
                    BB6B, 8,
                    BB6C, 8,
                    BB6D, 8,
                    BB6E, 8,
                    BB6F, 8
                }
            }
            Device(BWM0)
            {
                Name(_HID, "MSHW0008")
                Name(_CID, "PNP0C14")
                Name(_UID, One)
                Name(_WDG, Buffer(0x28)
                {
	0xea, 0x25, 0xcc, 0xf7, 0x0b, 0xd2, 0x4c, 0x40, 0x89, 0x03, 0x0e, 0xd4,
	0x35, 0x9c, 0x18, 0xae, 0x45, 0x4c, 0x01, 0x01, 0xeb, 0x25, 0xcc, 0xf7,
	0x0b, 0xd2, 0x4c, 0x40, 0x89, 0x03, 0x0e, 0xd4, 0x35, 0x9c, 0x18, 0xae,
	0x42, 0x44, 0x01, 0x01
                })
                Name(CCEL, Zero)
                Method(WCEL, 0x1, NotSerialized)
                {
                    If(Arg0 == Zero)
                    {
                        If(CCEL == Zero)
                        {
                            Name(FOO_, "WMIACPI: ASL: WCEL called, but CCEL is 0
")
                            Debug = FOO_
                            Fatal(0xa0, 0x12, Zero)
                        }
                    }
                    Else
                    {
                        If(!(CCEL == Zero))
                        {
                            Name(FOO1, "WMIACPI: ASL: WCEL called, but CCEL is 1
")
                            Debug = FOO1
                            Fatal(0xa0, 0x11, Zero)
                        }
                    }
                    CCEL = Arg0
                }
                Method(WQEL, 0x1, NotSerialized)
                {
                    Local2 = 0xffff
                    Name(BUFF, Buffer(0x2)
                    {
	0xff, 0xff
                    })
                    CreateWordField(BUFF, Zero, BAFW)
                    BAFW = \_SB_.BFVM
                    BAFW = \_SB_.BFVM << 0x8
                    BAFW = \_SB_.BFVN | BAFW
                    Return(BAFW)
                }
                Method(WQBD, 0x1, NotSerialized)
                {
                    Local0 = \_SB_.BDID
                    Return(Local0)
                }
            }
        }
        Device(RTCD)
        {
            Method(_HID, 0x0, NotSerialized)
            {
                Return("ACPI000E")
            }
            Scope(\_SB_.I2C5)
            {
                Name(TR3_, Buffer(0x20)
                {
	0x8e, 0x1b, 0x00, 0x01, 0x00, 0x01, 0x02, 0x00, 0x00, 0x01, 0x08, 0x00,
	0x80, 0x1a, 0x06, 0x00, 0x2d, 0x00, 0x0e, 0x00, 0x5c, 0x5f, 0x53, 0x42,
	0x2e, 0x49, 0x32, 0x43, 0x35, 0x00, 0x79, 0x00
                })
                OperationRegion(TOP2, GenericSerialBus, Zero, 0x100)
                Field(TOP2, BufferAcc, NoLock, Preserve)
                {
                    Connection(\_SB_.I2C5.TR3_),
                    AccessAs(BufferAcc, 0x6),
                    SECP, 8,
                    MINP, 8,
                    HRSP, 8,
                    DAYP, 8,
                    MNTP, 8,
                    YRSP, 8,
                    , 8,
                    , 8,
                    ASEC, 8,
                    AMIN, 8,
                    AHRS, 8,
                    ADAY, 8,
                    AMNT, 8,
                    AYRS, 8,
                    , 8,
                    , 8,
                    , 8,
                    RTCP, 8,
                    RTCS, 8,
                    RTCI, 8
                }
                Field(TOP2, BufferAcc, NoLock, Preserve)
                {
                    Connection(\_SB_.I2C5.TR3_),
                    AccessAs(BufferAcc, AttribRawBytes(2)),
                    RTCF, 8
                }
            }
            Method(_GCP, 0x0, NotSerialized)
            {
                Return(0x4)
            }
            Method(_GRT, 0x0, NotSerialized)
            {
                Name(BUFF, Buffer(0x10)
                {
                })
                CreateWordField(BUFF, Zero, YEAR)
                CreateByteField(BUFF, 0x2, MNTH)
                CreateByteField(BUFF, 0x3, DAYS)
                CreateByteField(BUFF, 0x4, HOUR)
                CreateByteField(BUFF, 0x5, MINS)
                CreateByteField(BUFF, 0x6, SECD)
                CreateByteField(BUFF, 0x7, VALD)
                CreateWordField(BUFF, 0x8, MSEC)
                CreateWordField(BUFF, 0xa, TZON)
                CreateByteField(BUFF, 0xc, DLGT)
                CreateByteField(BUFF, 0xd, PAD2)
                VALD = Zero
                MSEC = One
                TZON = Zero
                DLGT = Zero
                PAD2 = Zero
                Name(SPBB, Buffer(0x22)
                {
                })
                CreateByteField(SPBB, 0x2, DAT0)
                If(\_SB_.I2C5.AVBL)
                {
                    SPBB = \_SB_.I2C5.SECP
                    FromBCD(DAT0, SECD)
                    SPBB = \_SB_.I2C5.MINP
                    FromBCD(DAT0, MINS)
                    SPBB = \_SB_.I2C5.HRSP
                    FromBCD(DAT0, HOUR)
                    SPBB = \_SB_.I2C5.DAYP
                    FromBCD(DAT0, DAYS)
                    SPBB = \_SB_.I2C5.MNTP
                    FromBCD(DAT0, MNTH)
                    SPBB = \_SB_.I2C5.YRSP
                    FromBCD(DAT0, Local0)
                    YEAR = Local0 + 0x7d0
                    VALD = \_SB_.RTCV
                }
                Return(BUFF)
            }
            Method(_SRT, 0x1, NotSerialized)
            {
                CreateWordField(Arg0, Zero, YEAR)
                CreateByteField(Arg0, 0x2, MNTH)
                CreateByteField(Arg0, 0x3, DAYS)
                CreateByteField(Arg0, 0x4, HOUR)
                CreateByteField(Arg0, 0x5, MINS)
                CreateByteField(Arg0, 0x6, SECD)
                CreateWordField(Arg0, 0xa, TZON)
                CreateByteField(Arg0, 0xc, DLGT)
                Name(SPBB, Buffer(0x22)
                {
                })
                CreateByteField(SPBB, 0x2, DAT0)
                CreateByteField(SPBB, 0x3, DAT1)
                If(\_SB_.I2C5.AVBL)
                {
                    DAT1 = 0x80
                    DAT0 = 0x11
                    \_SB_.I2C5.RTCF = SPBB
                    DAT1 = One
                    DAT0 = 0x10
                    \_SB_.I2C5.RTCF = SPBB
                    If(((!(TZON == 0x7ff)) && ((!(TZON == Zero)) || (DLGT == 0x3))) && (!(TZON == Zero)))
                    {
                        Local0 = Zero
                        Local1 = YEAR - One
                        While(!(Local1 < 0x7d0))
                        {
                            Local0 = Local0 + 0x1e13380
                            If(!(((Local1 % 0x190) || (Local1 % 0x64)) && (Local1 % 0x4)))
                            {
                                Local0 = Local0 + 0x15180
                            }
                            Local1--
                        }
                        Local1 = One
                        While(Local1 < MNTH)
                        {
                            If(!((Match(Package(0x7)
                            {
                                One,
                                0x3,
                                0x5,
                                0x7,
                                0x8,
                                0xa,
                                0xc
                            }, MEQ, Local1, MTR, Zero, Zero)) == Ones))
                            {
                                Local0 = Local0 + 0x28de80
                            }
                            Else
                            {
                                If(!((Match(Package(0x4)
                                {
                                    0x4,
                                    0x6,
                                    0x9,
                                    0xb
                                }, MEQ, Local1, MTR, Zero, Zero)) == Ones))
                                {
                                    Local0 = Local0 + 0x278d00
                                }
                                Else
                                {
                                    If(Local1 == 0x2)
                                    {
                                        If(((YEAR % 0x190) || (YEAR % 0x64)) && (YEAR % 0x4))
                                        {
                                            Local0 = Local0 + 0x24ea00
                                        }
                                        Else
                                        {
                                            Local0 = Local0 + 0x263b80
                                        }
                                    }
                                }
                            }
                            Local1++
                        }
                        Local1 = DAYS - One
                        Local1 = Local1 * 0x15180
                        Local0 = Local0 + Local1
                        Local1 = HOUR * 0xe10
                        Local0 = Local0 + Local1
                        Local1 = MINS * 0x3c
                        Local0 = Local0 + Local1
                        Local0 = Local0 + SECD
                        Local1 = TZON
                        If(Local1 > 0x5a0)
                        {
                            Local1 = ~TZON
                            Local1 = Local1 & 0xffff
                            Local1++
                            Local1 = Local1 * 0x3c
                            Local0 = Local0 - Local1
                        }
                        Else
                        {
                            Local1 = Local1 * 0x3c
                            Local0 = Local0 + Local1
                        }
                        SECD = Local0 % 0x3c
                        Local0 = Local0 / 0x3c
                        MINS = Local0 % 0x3c
                        Local0 = Local0 / 0x3c
                        HOUR = Local0 % 0x18
                        Local0 = Local0 / 0x18
                        Local4 = Local0 / 0x16d
                        Local0++
                        Local5 = Zero
                        While(!(Local5 > Zero))
                        {
                            Local4--
                            Local5 = Local4 / 0x4
                            Local6 = Local5 + One
                            Local5 = Local4 / 0x64
                            Local6 = Local6 - Local5
                            Local5 = Local4 / 0x190
                            Local6 = Local5 + Local6
                            Local4++
                            Local5 = Local4 * 0x16d
                            Local5 = Local0 - Local5
                            Local5 = Local5 - Local6
                            Local4--
                        }
                        YEAR = Local4 + 0x7d1
                        Local6 = One
                        Local7 = One
                        While(!(Local7 > 0xc))
                        {
                            If(!((Match(Package(0x7)
                            {
                                One,
                                0x3,
                                0x5,
                                0x7,
                                0x8,
                                0xa,
                                0xc
                            }, MEQ, Local7, MTR, Zero, Zero)) == Ones))
                            {
                                Local6 = 0x1f
                            }
                            Else
                            {
                                If(!((Match(Package(0x4)
                                {
                                    0x4,
                                    0x6,
                                    0x9,
                                    0xb
                                }, MEQ, Local7, MTR, Zero, Zero)) == Ones))
                                {
                                    Local6 = 0x1e
                                }
                                Else
                                {
                                    If(Local7 == 0x2)
                                    {
                                        If(((YEAR % 0x190) || (YEAR % 0x4)) && (YEAR % 0x64))
                                        {
                                            Local6 = 0x1c
                                        }
                                        Else
                                        {
                                            Local6 = 0x1d
                                        }
                                    }
                                }
                            }
                            If(Local5 > Local6)
                            {
                                Local5 = Local5 - Local6
                            }
                            Else
                            {
                                Break
                            }
                            Local7++
                        }
                        MNTH = Local7
                        Local5--
                        DAYS = Local5
                    }
                    ToBCD(SECD, DAT1)
                    DAT0 = Zero
                    \_SB_.I2C5.RTCF = SPBB
                    ToBCD(MINS, DAT1)
                    DAT0 = One
                    \_SB_.I2C5.RTCF = SPBB
                    ToBCD(HOUR, DAT1)
                    DAT0 = 0x2
                    \_SB_.I2C5.RTCF = SPBB
                    ToBCD(DAYS, DAT1)
                    DAT0 = 0x3
                    \_SB_.I2C5.RTCF = SPBB
                    ToBCD(MNTH, DAT1)
                    DAT0 = 0x4
                    \_SB_.I2C5.RTCF = SPBB
                    ToBCD(YEAR, Local0)
                    DAT1 = Local0 & 0xff
                    DAT0 = 0x5
                    \_SB_.I2C5.RTCF = SPBB
                }
                Return(Zero)
            }
            Method(_GWS, 0x1, NotSerialized)
            {
                Name(SPBB, Buffer(0x22)
                {
                })
                CreateByteField(SPBB, 0x2, DAT0)
                If(\_SB_.I2C5.AVBL)
                {
                    SPBB = \_SB_.I2C5.RTCS
                    If(DAT0 & 0x40)
                    {
                        Return(One)
                    }
                    Return(Zero)
                }
            }
            Method(_CWS, 0x1, NotSerialized)
            {
                Name(SPBB, Buffer(0x22)
                {
                })
                CreateByteField(SPBB, 0x2, DAT0)
                If(\_SB_.I2C5.AVBL)
                {
                    SPBB = \_SB_.I2C5.RTCS
                    If(DAT0 & 0x40)
                    {
                        DAT0 = 0x11
                        Return(Zero)
                    }
                    Return(One)
                }
            }
            Method(_STP, 0x2, NotSerialized)
            {
                Return(One)
            }
            Method(_STV, 0x2, NotSerialized)
            {
                CreateDWordField(Arg1, Zero, TIMR)
                Name(SPBB, Buffer(0x22)
                {
                })
                CreateByteField(SPBB, 0x2, DAT0)
                CreateByteField(SPBB, 0x3, DAT1)
                If(\_SB_.I2C5.AVBL)
                {
                    Name(BUFF, Buffer(0x10)
                    {
                    })
                    CreateWordField(BUFF, Zero, YEAR)
                    CreateByteField(BUFF, 0x2, MNTH)
                    CreateByteField(BUFF, 0x3, DAYS)
                    CreateByteField(BUFF, 0x4, HOUR)
                    CreateByteField(BUFF, 0x5, MINS)
                    CreateByteField(BUFF, 0x6, SECD)
                    BUFF = _GRT()
                    Local0 = TTS_(BUFF)
                    TIMR = TIMR + Local0
                    BUFF = STT_(TIMR)
                    ToBCD(SECD, DAT1)
                    DAT0 = 0x8
                    \_SB_.I2C5.RTCF = SPBB
                    ToBCD(MINS, DAT1)
                    DAT0 = 0x9
                    \_SB_.I2C5.RTCF = SPBB
                    ToBCD(HOUR, DAT1)
                    DAT0 = 0xa
                    \_SB_.I2C5.RTCF = SPBB
                    ToBCD(DAYS, DAT1)
                    DAT0 = 0xb
                    \_SB_.I2C5.RTCF = SPBB
                    ToBCD(MNTH, DAT1)
                    DAT0 = 0xc
                    \_SB_.I2C5.RTCF = SPBB
                    ToBCD(YEAR, Local0)
                    DAT1 = Local0 & 0xff
                    DAT0 = 0xd
                    \_SB_.I2C5.RTCF = SPBB
                    SPBB = \_SB_.I2C5.RTCI
                    DAT1 = DAT0 | 0x8
                    DAT0 = 0x12
                    \_SB_.I2C5.RTCF = SPBB
                    Return(One)
                }
            }
            Method(_TIP, 0x1, NotSerialized)
            {
                Return(One)
            }
            Method(_TIV, 0x1, NotSerialized)
            {
                Name(SPBB, Buffer(0x22)
                {
                })
                CreateByteField(SPBB, 0x2, DAT0)
                CreateByteField(SPBB, 0x3, DAT1)
                Name(TIVR, Buffer(0x4)
                {
                })
                CreateDWordField(TIVR, Zero, REMT)
                If(_GWS(One))
                {
                    Return(0xffffffff)
                }
                If(\_SB_.I2C5.AVBL)
                {
                    Name(BUFF, Buffer(0x10)
                    {
                    })
                    CreateWordField(BUFF, Zero, YEAR)
                    CreateByteField(BUFF, 0x2, MNTH)
                    CreateByteField(BUFF, 0x3, DAYS)
                    CreateByteField(BUFF, 0x4, HOUR)
                    CreateByteField(BUFF, 0x5, MINS)
                    CreateByteField(BUFF, 0x6, SECD)
                    BUFF = _GRT()
                    Local0 = TTS_(BUFF)
                    SPBB = \_SB_.I2C5.ASEC
                    FromBCD(DAT0, SECD)
                    SPBB = \_SB_.I2C5.AMIN
                    FromBCD(DAT0, MINS)
                    SPBB = \_SB_.I2C5.AHRS
                    FromBCD(DAT0, HOUR)
                    SPBB = \_SB_.I2C5.ADAY
                    FromBCD(DAT0, DAYS)
                    SPBB = \_SB_.I2C5.AMNT
                    FromBCD(DAT0, MNTH)
                    SPBB = \_SB_.I2C5.AYRS
                    FromBCD(DAT0, Local0)
                    YEAR = Local0 + 0x7d0
                    Local1 = TTS_(BUFF)
                    REMT = Local1 - Local0
                    Return(TIVR)
                }
                Else
                {
                    Return(0xffffffff)
                }
            }
            Method(STT_, 0x1, NotSerialized)
            {
                Name(BUFF, Buffer(0x10)
                {
                })
                CreateWordField(BUFF, Zero, YEAR)
                CreateByteField(BUFF, 0x2, MNTH)
                CreateByteField(BUFF, 0x3, DAYS)
                CreateByteField(BUFF, 0x4, HOUR)
                CreateByteField(BUFF, 0x5, MINS)
                CreateByteField(BUFF, 0x6, SECD)
                CreateByteField(BUFF, 0x7, PAD1)
                CreateWordField(BUFF, 0x8, MSEC)
                CreateWordField(BUFF, 0xa, TZON)
                CreateByteField(BUFF, 0xc, DLGT)
                CreateByteField(BUFF, 0xd, PAD2)
                CreateDWordField(Arg0, Zero, SECS)
                Local0 = SECS
                SECD = Local0 % 0x3c
                Local0 = Local0 / 0x3c
                MINS = Local0 % 0x3c
                Local0 = Local0 / 0x3c
                HOUR = Local0 % 0x18
                Local0 = Local0 / 0x18
                Local4 = Local0 / 0x16d
                Local0++
                Local5 = Zero
                While(!(Local5 > Zero))
                {
                    Local4--
                    Local5 = Local4 / 0x4
                    Local6 = Local5 + One
                    Local5 = Local4 / 0x64
                    Local6 = Local6 - Local5
                    Local5 = Local4 / 0x190
                    Local6 = Local5 + Local6
                    Local4++
                    Local5 = Local4 * 0x16d
                    Local5 = Local0 - Local5
                    Local5 = Local5 - Local6
                    Local4--
                }
                YEAR = Local4 + 0x7d1
                Local6 = One
                Local7 = One
                While(!(Local7 > 0xc))
                {
                    If(!((Match(Package(0x7)
                    {
                        One,
                        0x3,
                        0x5,
                        0x7,
                        0x8,
                        0xa,
                        0xc
                    }, MEQ, Local7, MTR, Zero, Zero)) == Ones))
                    {
                        Local6 = 0x1f
                    }
                    Else
                    {
                        If(!((Match(Package(0x4)
                        {
                            0x4,
                            0x6,
                            0x9,
                            0xb
                        }, MEQ, Local7, MTR, Zero, Zero)) == Ones))
                        {
                            Local6 = 0x1e
                        }
                        Else
                        {
                            If(Local7 == 0x2)
                            {
                                If(((YEAR % 0x190) || (YEAR % 0x4)) && (YEAR % 0x64))
                                {
                                    Local6 = 0x1c
                                }
                                Else
                                {
                                    Local6 = 0x1d
                                }
                            }
                        }
                    }
                    If(Local5 > Local6)
                    {
                        Local5 = Local5 - Local6
                    }
                    Else
                    {
                        Break
                    }
                    Local7++
                }
                MNTH = Local7
                DAYS = Local5
                Return(BUFF)
            }
            Method(TTS_, 0x1, NotSerialized)
            {
                CreateWordField(Arg0, Zero, YEAR)
                CreateByteField(Arg0, 0x2, MNTH)
                CreateByteField(Arg0, 0x3, DAYS)
                CreateByteField(Arg0, 0x4, HOUR)
                CreateByteField(Arg0, 0x5, MINS)
                CreateByteField(Arg0, 0x6, SECD)
                CreateByteField(Arg0, 0xa, TZON)
                CreateByteField(Arg0, 0xc, DLGT)
                Local0 = Zero
                Local1 = YEAR - One
                While(!(Local1 < 0x7d0))
                {
                    Local0 = Local0 + 0x1e13380
                    If(!(((Local1 % 0x190) || (Local1 % 0x64)) && (Local1 % 0x4)))
                    {
                        Local0 = Local0 + 0x15180
                    }
                    Local1--
                }
                Local1 = One
                While(Local1 < MNTH)
                {
                    If(!((Match(Package(0x7)
                    {
                        One,
                        0x3,
                        0x5,
                        0x7,
                        0x8,
                        0xa,
                        0xc
                    }, MEQ, Local1, MTR, Zero, Zero)) == Ones))
                    {
                        Local0 = Local0 + 0x28de80
                    }
                    Else
                    {
                        If(!((Match(Package(0x4)
                        {
                            0x4,
                            0x6,
                            0x9,
                            0xb
                        }, MEQ, Local1, MTR, Zero, Zero)) == Ones))
                        {
                            Local0 = Local0 + 0x278d00
                        }
                        Else
                        {
                            If(Local1 == 0x2)
                            {
                                If(((YEAR % 0x190) || (YEAR % 0x64)) && (YEAR % 0x4))
                                {
                                    Local0 = Local0 + 0x24ea00
                                }
                                Else
                                {
                                    Local0 = Local0 + 0x263b80
                                }
                            }
                        }
                    }
                    Local1++
                }
                Local1 = DAYS - One
                Local1 = Local1 * 0x15180
                Local0 = Local0 + Local1
                Local1 = HOUR * 0xe10
                Local0 = Local0 + Local1
                Local1 = HOUR * 0x3c
                Local0 = Local0 + Local1
                Local0 = Local0 + SECD
                Name(BUFF, Buffer(0x4)
                {
                })
                BUFF = Local0
                Return(BUFF)
            }
            Name(_DEP, Package(0x1)
            {
                \_SB_.I2C5
            })
        }
        Scope(\_SB_.GPIO)
        {
            Name(BUFF, Buffer(0x4)
            {
            })
            CreateByteField(BUFF, Zero, STAT)
            CreateByteField(BUFF, 0x2, DATB)
            Method(_EEB, 0x0, NotSerialized)
            {
                If(\_SB_.BDID < 0x3)
                {
                }
                Else
                {
                    BUFF = \_SB_.I2C2.TMPH
                    If(!(DATB < \_TZ_.TZ02.PSVT))
                    {
                        Debug = "Activate TZ02"
                        Notify(\_TZ_.TZ02, 0x80)
                    }
                    If(!(DATB < \_TZ_.TZ05.PSVT))
                    {
                        Debug = "Activate TZ05"
                        Notify(\_TZ_.TZ05, 0x80)
                    }
                }
            }
        }
        Scope(\_TZ_)
        {
            Method(RI2C, 0x1, NotSerialized)
            {
                Name(BUFF, Buffer(0x22)
                {
                })
                CreateByteField(BUFF, Zero, STAT)
                CreateByteField(BUFF, 0x2, DATB)
                BUFF = Arg0
                Local0 = DATB
                Return(Local0)
            }
            ThermalZone(TZ00)
            {
                Name(CRTT, 0x58)
                Name(PSVT, 0x58)
                Name(CTYP, Zero)
                Name(TC1V, 0x2)
                Name(TC2V, 0x3)
                Name(TSPV, 0x32)
                Name(TRPF, Zero)
                Name(_DEP, Package(0x1)
                {
                    \_SB_.THEM
                })
                Method(_SCP, 0x1, Serialized)
                {
                    CTYP = Arg0
                }
                Method(_CRT, 0x0, Serialized)
                {
                    Return(0xaac + (CRTT * 0xa))
                }
                Name(BUFF, Buffer(0x22)
                {
                })
                CreateByteField(BUFF, Zero, STAT)
                CreateByteField(BUFF, 0x2, DATB)
                Method(_HID, 0x0, NotSerialized)
                {
                    Return("NVDAF300")
                }
                Name(_UID, 0x11)
                Method(_TZD, 0x0, Serialized)
                {
                    Return(Package(0x4)
                    {
                        \_SB_.CPU0,
                        \_SB_.CPU1,
                        \_SB_.CPU2,
                        \_SB_.CPU3
                    })
                }
                Method(_PSV, 0x0, Serialized)
                {
                    Return(0xaac + (PSVT * 0xa))
                }
                Method(_TC1, 0x0, Serialized)
                {
                    Return(TC1V)
                }
                Method(_TC2, 0x0, Serialized)
                {
                    Return(TC2V)
                }
                Method(_TSP, 0x0, Serialized)
                {
                    Return(TSPV)
                }
            }
            ThermalZone(TZ03)
            {
                Name(CRTT, 0x64)
                Name(PSVT, 0x64)
                Name(CTYP, Zero)
                Name(TC1V, 0x2)
                Name(TC2V, 0x3)
                Name(TSPV, 0x32)
                Name(_DEP, Package(0x1)
                {
                    \_SB_.THEM
                })
                Method(_SCP, 0x1, Serialized)
                {
                    CTYP = Arg0
                }
                Method(_CRT, 0x0, Serialized)
                {
                    Return(0xaac + (CRTT * 0xa))
                }
                Name(BUFF, Buffer(0x22)
                {
                })
                CreateByteField(BUFF, Zero, STAT)
                CreateByteField(BUFF, 0x2, DATB)
                Method(_HID, 0x0, NotSerialized)
                {
                    Return("NVDAF300")
                }
                Name(_UID, 0x12)
                Method(_TZD, 0x0, Serialized)
                {
                    Return(Package(0x2)
                    {
                        \_SB_.GFXC.LCD0,
                        \_SB_.BAT0
                    })
                }
                Method(_PSV, 0x0, Serialized)
                {
                    Return(0xaac + (PSVT * 0xa))
                }
                Method(_TC1, 0x0, Serialized)
                {
                    Return(TC1V)
                }
                Method(_TC2, 0x0, Serialized)
                {
                    Return(TC2V)
                }
                Method(_TSP, 0x0, Serialized)
                {
                    Return(TSPV)
                }
            }
            ThermalZone(TZ01)
            {
                Name(CRTT, 0x33)
                Name(PSVT, 0x30)
                Name(CTYP, Zero)
                Name(TC1V, 0x2)
                Name(TC2V, 0x3)
                Name(TSPV, 0x32)
                Name(TRPF, Zero)
                Name(_DEP, Package(0x1)
                {
                    \_SB_.THEM
                })
                Method(_HID, 0x0, NotSerialized)
                {
                    Return("NVDAF300")
                }
                Name(_UID, 0x23)
                Method(_TZD, 0x0, Serialized)
                {
                    Return(Package(0x6)
                    {
                        \_SB_.BAT0,
                        \_SB_.GFXC.LCD0,
                        \_SB_.CPU0,
                        \_SB_.CPU1,
                        \_SB_.CPU2,
                        \_SB_.CPU3
                    })
                }
                Method(_PSV, 0x0, Serialized)
                {
                    Return(0xaac + (PSVT * 0xa))
                }
                Method(_CRT, 0x0, Serialized)
                {
                    Return(0xaac + (CRTT * 0xa))
                }
                Method(_TC1, 0x0, Serialized)
                {
                    Return(TC1V)
                }
                Method(_TC2, 0x0, Serialized)
                {
                    Return(TC2V)
                }
                Method(_TSP, 0x0, Serialized)
                {
                    Return(TSPV)
                }
            }
            ThermalZone(TZ04)
            {
                Name(CRTT, 0x64)
                Name(PSVT, 0x64)
                Name(CTYP, Zero)
                Name(TC1V, 0x2)
                Name(TC2V, 0x3)
                Name(TSPV, 0x32)
                Name(TRPF, Zero)
                Name(_DEP, Package(0x1)
                {
                    \_SB_.THEM
                })
                Method(_SCP, 0x1, Serialized)
                {
                    CTYP = Arg0
                }
                Method(_CRT, 0x0, Serialized)
                {
                    Return(0xaac + (CRTT * 0xa))
                }
                Name(BUFF, Buffer(0x22)
                {
                })
                CreateByteField(BUFF, Zero, STAT)
                CreateByteField(BUFF, 0x2, DATB)
                Method(_HID, 0x0, NotSerialized)
                {
                    Return("NVDAF300")
                }
                Name(_UID, 0x24)
                Method(_TZD, 0x0, Serialized)
                {
                    Return(Package(0x6)
                    {
                        \_SB_.BAT0,
                        \_SB_.GFXC.LCD0,
                        \_SB_.CPU0,
                        \_SB_.CPU1,
                        \_SB_.CPU2,
                        \_SB_.CPU3
                    })
                }
                Method(_PSV, 0x0, Serialized)
                {
                    Return(0xaac + (PSVT * 0xa))
                }
                Method(_TC1, 0x0, Serialized)
                {
                    Return(TC1V)
                }
                Method(_TC2, 0x0, Serialized)
                {
                    Return(TC2V)
                }
                Method(_TSP, 0x0, Serialized)
                {
                    Return(TSPV)
                }
            }
            ThermalZone(TZ02)
            {
                Name(CRTT, 0x2e)
                Name(PSVT, 0x2b)
                Name(CTYP, Zero)
                Name(TC1V, 0x2)
                Name(TC2V, 0x3)
                Name(TSPV, 0x32)
                Name(TRPF, Zero)
                Name(_DEP, Package(0x1)
                {
                    \_SB_.I2C2
                })
                Method(_SCP, 0x1, Serialized)
                {
                    CTYP = Arg0
                }
                Method(_CRT, 0x0, Serialized)
                {
                    Return(0xaac + (CRTT * 0xa))
                }
                Name(BUFF, Buffer(0x22)
                {
                })
                CreateByteField(BUFF, Zero, STAT)
                CreateByteField(BUFF, 0x2, DATB)
                Method(_TMP, 0x0, Serialized)
                {
                    If(\_SB_.I2C2.AVBL == Zero)
                    {
                        Return(0xbc2)
                    }
                    If(TRPF == Zero)
                    {
                        TRPF = One
                        BUFF = \_SB_.I2C2.HTLH
                        If(PSVT < DATB)
                        {
                            Debug = "TZ02 trip limit: "
                            Debug = DATB
                            DATB = PSVT
                            \_SB_.I2C2.HTLH = BUFF
                        }
                    }
                    BUFF = \_SB_.I2C2.TMPH
                    Local0 = DATB
                    If(Local0 < PSVT)
                    {
                        BUFF = \_SB_.I2C2.SARB
                    }
                    BUFF = \_SB_.I2C2.TMPL
                    Local1 = DATB
                    Debug = "TZ02 Backlight Thermal"
                    Debug = Local0
                    Return(0xaac + (Local0 * 0xa))
                }
                Method(_TZD, 0x0, Serialized)
                {
                    Return(Package(0x2)
                    {
                        \_SB_.GFXC.LCD0,
                        \_SB_.BAT0
                    })
                }
                Method(_PSV, 0x0, Serialized)
                {
                    Return(0xaac + (PSVT * 0xa))
                }
                Method(_TC1, 0x0, Serialized)
                {
                    Return(TC1V)
                }
                Method(_TC2, 0x0, Serialized)
                {
                    Return(TC2V)
                }
                Method(_TSP, 0x0, Serialized)
                {
                    Return(TSPV)
                }
            }
            ThermalZone(TZ05)
            {
                Name(CRTT, 0x64)
                Name(PSVT, 0x64)
                Name(CTYP, Zero)
                Name(TC1V, 0x2)
                Name(TC2V, 0x3)
                Name(TSPV, 0x32)
                Name(TRPF, Zero)
                Name(_DEP, Package(0x1)
                {
                    \_SB_.I2C2
                })
                Method(_SCP, 0x1, Serialized)
                {
                    CTYP = Arg0
                }
                Method(_CRT, 0x0, Serialized)
                {
                    Return(0xaac + (CRTT * 0xa))
                }
                Name(BUFF, Buffer(0x22)
                {
                })
                CreateByteField(BUFF, Zero, STAT)
                CreateByteField(BUFF, 0x2, DATB)
                Method(_TMP, 0x0, Serialized)
                {
                    If(\_SB_.I2C2.AVBL == Zero)
                    {
                        Return(0xbc2)
                    }
                    If(TRPF == Zero)
                    {
                        TRPF = One
                        BUFF = \_SB_.I2C2.HTLH
                        If(PSVT < DATB)
                        {
                            Debug = "TZ05 trip limit: "
                            Debug = DATB
                            DATB = PSVT
                            \_SB_.I2C2.HTLH = BUFF
                        }
                    }
                    BUFF = \_SB_.I2C2.TMPH
                    Local0 = DATB
                    If(Local0 < PSVT)
                    {
                        BUFF = \_SB_.I2C2.SARB
                    }
                    BUFF = \_SB_.I2C2.TMPL
                    Local1 = DATB
                    Debug = "TZ05 Backlight Thermal"
                    Debug = Local0
                    Return(0xaac + (Local0 * 0xa))
                }
                Method(_TZD, 0x0, Serialized)
                {
                    Return(Package(0x6)
                    {
                        \_SB_.CPU0,
                        \_SB_.CPU1,
                        \_SB_.CPU2,
                        \_SB_.CPU3,
                        \_SB_.BAT0,
                        \_SB_.GFXC.LCD0
                    })
                }
                Method(_PSV, 0x0, Serialized)
                {
                    Return(0xaac + (PSVT * 0xa))
                }
                Method(_TC1, 0x0, Serialized)
                {
                    Return(TC1V)
                }
                Method(_TC2, 0x0, Serialized)
                {
                    Return(TC2V)
                }
                Method(_TSP, 0x0, Serialized)
                {
                    Return(TSPV)
                }
            }
        }
        Scope(\_SB_.I2C5)
        {
            Name(TI2C, Buffer(0x1e)
            {
	0x8e, 0x19, 0x00, 0x01, 0x00, 0x01, 0x02, 0x00, 0x00, 0x01, 0x06, 0x00,
	0x80, 0x1a, 0x06, 0x00, 0x4c, 0x00, 0x5c, 0x5f, 0x53, 0x42, 0x2e, 0x49,
	0x32, 0x43, 0x35, 0x00, 0x79, 0x00
            })
            Name(SARA, Buffer(0x1e)
            {
	0x8e, 0x19, 0x00, 0x01, 0x00, 0x01, 0x02, 0x00, 0x00, 0x01, 0x06, 0x00,
	0x80, 0x1a, 0x06, 0x00, 0x0c, 0x00, 0x5c, 0x5f, 0x53, 0x42, 0x2e, 0x49,
	0x32, 0x43, 0x35, 0x00, 0x79, 0x00
            })
            OperationRegion(SARO, GenericSerialBus, Zero, 0x100)
            Field(SARO, BufferAcc, NoLock, Preserve)
            {
                Connection(\_SB_.I2C5.SARA),
                AccessAs(BufferAcc, 0x4),
                SARB, 8
            }
            OperationRegion(THMR, GenericSerialBus, Zero, 0x100)
            Field(THMR, BufferAcc, NoLock, Preserve)
            {
                Connection(\_SB_.I2C5.TI2C),
                AccessAs(BufferAcc, 0x6),
                LTMP, 8,
                ETMH, 8,
                STSS, 8,
                CFGR, 8,
                , 8,
                LTHR, 8,
                , 8,
                ELHR, 8,
                ELLR, 8,
                CFGW, 8,
                , 8,
                LTLH, 8,
                LTLL, 8,
                ETLH, 8,
                ETLL, 8,
                , 8,
                ETML, 8,
                Offset(0x19),
                ETLM, 8,
                Offset(0x20),
                LTLM, 8,
                THYP, 8
            }
            Name(TIC1, Buffer(0x1e)
            {
	0x8e, 0x19, 0x00, 0x01, 0x00, 0x01, 0x02, 0x00, 0x00, 0x01, 0x06, 0x00,
	0x80, 0x1a, 0x06, 0x00, 0x0c, 0x00, 0x5c, 0x5f, 0x53, 0x42, 0x2e, 0x49,
	0x32, 0x43, 0x35, 0x00, 0x79, 0x00
            })
            OperationRegion(THM1, GenericSerialBus, Zero, 0x100)
            Field(THM1, BufferAcc, NoLock, Preserve)
            {
                Connection(\_SB_.I2C5.TIC1),
                AccessAs(BufferAcc, 0x6),
                RSPR, 8
            }
        }
        Scope(\_SB_.I2C2)
        {
            Name(TI2C, Buffer(0x1e)
            {
	0x8e, 0x19, 0x00, 0x01, 0x00, 0x01, 0x02, 0x00, 0x00, 0x01, 0x06, 0x00,
	0x80, 0x1a, 0x06, 0x00, 0x39, 0x00, 0x5c, 0x5f, 0x53, 0x42, 0x2e, 0x49,
	0x32, 0x43, 0x32, 0x00, 0x79, 0x00
            })
            OperationRegion(THMR, GenericSerialBus, Zero, 0x100)
            Field(THMR, BufferAcc, NoLock, Preserve)
            {
                Connection(\_SB_.I2C2.TI2C),
                AccessAs(BufferAcc, 0x6),
                TMPH, 8,
                STSS, 8,
                TMPL, 8,
                , 16,
                HTLH, 8,
                HTLL, 8,
                Offset(0x20),
                LTLM, 8
            }
            Name(SARA, Buffer(0x1e)
            {
	0x8e, 0x19, 0x00, 0x01, 0x00, 0x01, 0x02, 0x00, 0x00, 0x01, 0x06, 0x00,
	0x80, 0x1a, 0x06, 0x00, 0x0c, 0x00, 0x5c, 0x5f, 0x53, 0x42, 0x2e, 0x49,
	0x32, 0x43, 0x32, 0x00, 0x79, 0x00
            })
            OperationRegion(SARO, GenericSerialBus, Zero, 0x100)
            Field(SARO, BufferAcc, NoLock, Preserve)
            {
                Connection(\_SB_.I2C2.SARA),
                AccessAs(BufferAcc, 0x4),
                SARB, 8
            }
        }
        Device(CODE)
        {
            Name(_HID, "NVDA0180")
        }
        Scope(AUDI)
        {
            Name(CRSA, Buffer(0xcd)
            {
	0x8e, 0x19, 0x00, 0x01, 0x00, 0x01, 0x02, 0x00, 0x00, 0x01, 0x06, 0x00,
	0x80, 0x1a, 0x06, 0x00, 0x1a, 0x00, 0x5c, 0x5f, 0x53, 0x42, 0x2e, 0x49,
	0x32, 0x43, 0x35, 0x00, 0x8c, 0x20, 0x00, 0x01, 0x00, 0x01, 0x00, 0x1d,
	0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x17, 0x00, 0x00, 0x19, 0x00, 0x23,
	0x00, 0x00, 0x00, 0xb2, 0x00, 0x5c, 0x5f, 0x53, 0x42, 0x2e, 0x47, 0x50,
	0x49, 0x4f, 0x00, 0x8c, 0x20, 0x00, 0x01, 0x00, 0x01, 0x00, 0x0d, 0x00,
	0x01, 0x00, 0x00, 0x00, 0x00, 0x17, 0x00, 0x00, 0x19, 0x00, 0x23, 0x00,
	0x00, 0x00, 0xb3, 0x00, 0x5c, 0x5f, 0x53, 0x42, 0x2e, 0x47, 0x50, 0x49,
	0x4f, 0x00, 0x8c, 0x20, 0x00, 0x01, 0x01, 0x01, 0x00, 0x08, 0x00, 0x01,
	0x00, 0x00, 0x00, 0x00, 0x17, 0x00, 0x00, 0x19, 0x00, 0x23, 0x00, 0x00,
	0x00, 0xb2, 0x00, 0x5c, 0x5f, 0x53, 0x42, 0x2e, 0x47, 0x50, 0x49, 0x4f,
	0x00, 0x8c, 0x20, 0x00, 0x01, 0x01, 0x01, 0x00, 0x08, 0x00, 0x01, 0x00,
	0x00, 0x00, 0x00, 0x17, 0x00, 0x00, 0x19, 0x00, 0x23, 0x00, 0x00, 0x00,
	0xb3, 0x00, 0x5c, 0x5f, 0x53, 0x42, 0x2e, 0x47, 0x50, 0x49, 0x4f, 0x00,
	0x8c, 0x20, 0x00, 0x01, 0x01, 0x01, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x17, 0x00, 0x00, 0x19, 0x00, 0x23, 0x00, 0x00, 0x00, 0x93,
	0x00, 0x5c, 0x5f, 0x53, 0x42, 0x2e, 0x47, 0x50, 0x49, 0x4f, 0x00, 0x79,
	0x00
            })
            Name(DARC, Buffer(0x108)
            {
	0x0e, 0x00, 0x90, 0xa9, 0xff, 0x00, 0x11, 0x37, 0x00, 0x00, 0xb7, 0x1d,
	0x00, 0x00, 0xc1, 0x85, 0x00, 0x00, 0x8e, 0x7c, 0x00, 0x00, 0x9e, 0xbc,
	0x01, 0x00, 0xcb, 0x7e, 0x01, 0x00, 0x53, 0xfc, 0x01, 0x00, 0x89, 0x5c,
	0xff, 0x00, 0xb4, 0xdb, 0xfe, 0x00, 0xdd, 0xa5, 0xfe, 0x00, 0x7d, 0x8e,
	0xff, 0x00, 0xad, 0x3c, 0xff, 0x00, 0x92, 0xbd, 0xff, 0x00, 0xc2, 0xa8,
	0xff, 0x00, 0xa4, 0x6c, 0xff, 0x00, 0xe1, 0x8f, 0xff, 0x00, 0x6a, 0xff,
	0x00, 0x00, 0x79, 0x40, 0x00, 0x00, 0x0b, 0x1d, 0xff, 0x00, 0xbd, 0xda,
	0xff, 0x00, 0xef, 0xcc, 0xff, 0x00, 0xf6, 0xed, 0x00, 0x00, 0xeb, 0x00,
	0xff, 0x00, 0xc7, 0xf1, 0xff, 0x00, 0xfe, 0xe5, 0xff, 0x00, 0xd6, 0xf7,
	0x00, 0x00, 0xe1, 0x0e, 0x00, 0x00, 0x7c, 0x0b, 0xff, 0x00, 0x7a, 0xf9,
	0xff, 0x00, 0x3b, 0xfb, 0x00, 0x00, 0x55, 0x11, 0x7f, 0x00, 0xff, 0xff,
	0x7f, 0x00, 0xff, 0xff, 0x0e, 0x00, 0x0d, 0x6b, 0xff, 0x00, 0x1d, 0x0f,
	0x00, 0x00, 0x73, 0x1c, 0x00, 0x00, 0xdf, 0x9a, 0x00, 0x00, 0x90, 0x8f,
	0x00, 0x00, 0xb8, 0xbf, 0x01, 0x00, 0x66, 0x72, 0x01, 0x00, 0x4e, 0xea,
	0x01, 0x00, 0x91, 0x54, 0xff, 0x00, 0xc1, 0xed, 0xfe, 0x00, 0x12, 0xd7,
	0xfe, 0x00, 0xb9, 0xd1, 0xff, 0x00, 0xc3, 0x7a, 0xff, 0x00, 0x86, 0xe6,
	0xff, 0x00, 0x78, 0xb9, 0xff, 0x00, 0x59, 0x63, 0xff, 0x00, 0xe8, 0x63,
	0xff, 0x00, 0x1a, 0xae, 0xff, 0x00, 0x71, 0xe0, 0xff, 0x00, 0x90, 0xd7,
	0xff, 0x00, 0x3a, 0xc8, 0xff, 0x00, 0xa5, 0xdb, 0xff, 0x00, 0x5d, 0xf5,
	0xff, 0x00, 0x94, 0xef, 0xff, 0x00, 0xf6, 0xdf, 0xff, 0x00, 0xea, 0xf5,
	0x00, 0x00, 0xc7, 0x29, 0x00, 0x00, 0x58, 0x3e, 0x00, 0x00, 0x0d, 0x18,
	0xff, 0x00, 0xfd, 0xe9, 0xff, 0x00, 0x22, 0xf4, 0x00, 0x00, 0x07, 0x2e
            })
            Name(ADCR, Buffer(0x108)
            {
	0x11, 0x00, 0x01, 0xce, 0x01, 0x00, 0x52, 0xc5, 0x01, 0x00, 0xc2, 0x86,
	0x01, 0x00, 0x57, 0x4c, 0x01, 0x00, 0xd3, 0x1f, 0x00, 0x00, 0x44, 0xc3,
	0x00, 0x00, 0xe5, 0x0f, 0xff, 0x00, 0x46, 0x47, 0xfe, 0x00, 0xbf, 0xe3,
	0xff, 0x00, 0xb9, 0x17, 0xff, 0x00, 0x41, 0x95, 0xff, 0x00, 0x40, 0xe1,
	0xff, 0x00, 0xf7, 0xcd, 0xff, 0x00, 0x7e, 0x92, 0xff, 0x00, 0xd9, 0x75,
	0xff, 0x00, 0x93, 0x80, 0xff, 0x00, 0xf0, 0x8a, 0xff, 0x00, 0xb3, 0x7f,
	0xff, 0x00, 0x46, 0x75, 0xff, 0x00, 0xca, 0x86, 0xff, 0x00, 0xcb, 0xac,
	0xff, 0x00, 0x9e, 0xc9, 0xff, 0x00, 0x12, 0xd0, 0xff, 0x00, 0x2e, 0xcd,
	0xff, 0x00, 0xc6, 0xce, 0xff, 0x00, 0x90, 0xd1, 0xff, 0x00, 0x5c, 0xce,
	0xff, 0x00, 0x4e, 0xcc, 0xff, 0x00, 0xdc, 0xd8, 0xff, 0x00, 0x53, 0xf1,
	0x00, 0x00, 0x25, 0x01, 0xff, 0x00, 0x12, 0xfa, 0x7f, 0x00, 0xff, 0xff,
	0x7f, 0x00, 0xff, 0xff, 0x11, 0x00, 0xb8, 0x57, 0x01, 0x00, 0x84, 0x68,
	0x01, 0x00, 0x2f, 0x85, 0x01, 0x00, 0xcf, 0xa6, 0x01, 0x00, 0x33, 0x96,
	0x01, 0x00, 0x9a, 0x08, 0x00, 0x00, 0x36, 0x05, 0xff, 0x00, 0x22, 0x0b,
	0xfe, 0x00, 0x9e, 0xad, 0xff, 0x00, 0xe9, 0x05, 0xff, 0x00, 0x1d, 0x9c,
	0xff, 0x00, 0x35, 0xe4, 0xff, 0x00, 0x5c, 0xc1, 0xff, 0x00, 0x0f, 0x83,
	0xff, 0x00, 0x99, 0x74, 0xff, 0x00, 0xff, 0x8e, 0xff, 0x00, 0xd1, 0x9c,
	0xff, 0x00, 0x6f, 0x8b, 0xff, 0x00, 0xbf, 0x7c, 0xff, 0x00, 0x1c, 0x90,
	0xff, 0x00, 0x27, 0xb7, 0xff, 0x00, 0x05, 0xcd, 0xff, 0x00, 0x26, 0xc7,
	0xff, 0x00, 0x0b, 0xbc, 0xff, 0x00, 0x08, 0xbf, 0xff, 0x00, 0x3b, 0xc9,
	0xff, 0x00, 0x3d, 0xcc, 0xff, 0x00, 0x62, 0xcc, 0xff, 0x00, 0x1e, 0xda,
	0xff, 0x00, 0x34, 0xf6, 0x00, 0x00, 0x12, 0x0b, 0x00, 0x00, 0xd1, 0x05
            })
            Method(_DSM, 0x4, NotSerialized)
            {
                If(Arg0 == (Buffer(0x10)
                {
	0x10, 0x48, 0x4e, 0xd1, 0xa0, 0xac, 0xfc, 0x44, 0xb1, 0x0e, 0xe3, 0x7e,
	0xfa, 0xc4, 0xc2, 0xb5
                }))
                {
                    CreateByteField(Arg3, Zero, FARG)
                    While(One)
                    {
                        Name(_T_0, 0x0)
                        _T_0 = Arg2
                        If(_T_0 == Zero)
                        {
                            Local0 = 0x7f
                            Return(Local0)
                        }
                        Else
                        {
                            If(_T_0 == One)
                            {
                                While(One)
                                {
                                    Name(_T_1, 0x0)
                                    _T_1 = FARG
                                    If(_T_1 == Zero)
                                    {
                                        Return(Package(0x7)
                                        {
                                            0x7004d,
                                            0x2,
                                            Zero,
                                            One,
                                            One,
                                            0x40,
                                            0x8
                                        })
                                    }
                                    Else
                                    {
                                        If(_T_1 == One)
                                        {
                                            Return(Package(0x7)
                                            {
                                                0x7004d,
                                                0x2,
                                                Zero,
                                                One,
                                                One,
                                                One,
                                                0x8
                                            })
                                        }
                                        Else
                                        {
                                            Return(0x80000002)
                                        }
                                    }
                                    Break
                                }
                            }
                            Else
                            {
                                If(_T_0 == 0x2)
                                {
                                    While(One)
                                    {
                                        Name(_T_2, 0x0)
                                        _T_2 = Arg3
                                        If(_T_2 == Zero)
                                        {
                                            Return(Package(0x6)
                                            {
                                                0x3,
                                                0xffffffff,
                                                0x3,
                                                0x6,
                                                One,
                                                Zero
                                            })
                                        }
                                        Else
                                        {
                                            If(_T_2 == One)
                                            {
                                                Return(Package(0x6)
                                                {
                                                    0x3,
                                                    0xffffffff,
                                                    One,
                                                    0x6,
                                                    Zero,
                                                    Zero
                                                })
                                            }
                                            Else
                                            {
                                                If(_T_2 == 0x2)
                                                {
                                                    Return(Package(0x6)
                                                    {
                                                        0x3,
                                                        0xffffffff,
                                                        0x3,
                                                        0x6,
                                                        One,
                                                        Zero
                                                    })
                                                }
                                                Else
                                                {
                                                    If(_T_2 == 0x3)
                                                    {
                                                        Return(Package(0x6)
                                                        {
                                                            0x3,
                                                            0xffffffff,
                                                            One,
                                                            0x6,
                                                            Zero,
                                                            Zero
                                                        })
                                                    }
                                                    Else
                                                    {
                                                        If(_T_2 == 0x4)
                                                        {
                                                            Return(Package(0x6)
                                                            {
                                                                0x4,
                                                                Zero,
                                                                0x6,
                                                                0xe,
                                                                0x3,
                                                                0x3
                                                            })
                                                        }
                                                        Else
                                                        {
                                                            If(_T_2 == 0x5)
                                                            {
                                                                Return(Package(0x6)
                                                                {
                                                                    0x4,
                                                                    Zero,
                                                                    0x6,
                                                                    0xe,
                                                                    0x3,
                                                                    0x3
                                                                })
                                                            }
                                                            Else
                                                            {
                                                                Return(0x80000002)
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                        Break
                                    }
                                }
                                Else
                                {
                                    If(_T_0 == 0x3)
                                    {
                                        While(One)
                                        {
                                            Name(_T_3, 0x0)
                                            _T_3 = FARG
                                            If(_T_3 == Zero)
                                            {
                                                Return(DARC)
                                            }
                                            Else
                                            {
                                                If(_T_3 == One)
                                                {
                                                    Return(ADCR)
                                                }
                                                Else
                                                {
                                                    Return(0x80000002)
                                                }
                                            }
                                            Break
                                        }
                                    }
                                    Else
                                    {
                                        If(_T_0 == 0x4)
                                        {
                                            Return(Package(0x9)
                                            {
                                                0x100,
                                                Zero,
                                                0xe152,
                                                0x1eae,
                                                Zero,
                                                Zero,
                                                0x64,
                                                0x1f40,
                                                0x2
                                            })
                                        }
                                        Else
                                        {
                                            If(_T_0 == 0x5)
                                            {
                                                While(One)
                                                {
                                                    Name(_T_4, 0x0)
                                                    _T_4 = FARG
                                                    If(_T_4 == Zero)
                                                    {
                                                        Return(Package(0x6)
                                                        {
                                                            0x2,
                                                            0xff9c,
                                                            Zero,
                                                            Zero,
                                                            Zero,
                                                            Zero
                                                        })
                                                    }
                                                    Else
                                                    {
                                                        If(_T_4 == One)
                                                        {
                                                            Return(Package(0x6)
                                                            {
                                                                0x2,
                                                                0x64,
                                                                Zero,
                                                                Zero,
                                                                Zero,
                                                                Zero
                                                            })
                                                        }
                                                        Else
                                                        {
                                                            Return(0x80000002)
                                                        }
                                                    }
                                                    Break
                                                }
                                            }
                                            Else
                                            {
                                                If(_T_0 == 0x6)
                                                {
                                                    While(One)
                                                    {
                                                        Name(_T_5, 0x0)
                                                        _T_5 = FARG
                                                        If(_T_5 == Zero)
                                                        {
                                                            Return(Buffer(0x12)
                                                            {
	0x7b, 0x01, 0x7b, 0x01, 0x03, 0x00, 0x05, 0x00, 0x9c, 0x00, 0x40, 0x62,
	0x9c, 0x00, 0x40, 0x62, 0x3e, 0x00
                                                            })
                                                        }
                                                        Else
                                                        {
                                                            If(_T_5 == One)
                                                            {
                                                                Return(Buffer(0x1a)
                                                                {
	0x1f, 0x01, 0x1f, 0x01, 0x79, 0x01, 0x79, 0x01, 0xf6, 0x01, 0xf6, 0x01,
	0x45, 0x01, 0x45, 0x01, 0x27, 0x82, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00,
	0x02, 0x00
                                                                })
                                                            }
                                                            Else
                                                            {
                                                                If(_T_5 == 0x2)
                                                                {
                                                                    Return(Buffer(0xc)
                                                                    {
	0x02, 0x00, 0x21, 0x09, 0x10, 0x40, 0x08, 0x04, 0x14, 0x02, 0x17, 0x00
                                                                    })
                                                                }
                                                                Else
                                                                {
                                                                    Return(0x80000002)
                                                                }
                                                            }
                                                        }
                                                        Break
                                                    }
                                                }
                                                Else
                                                {
                                                    Return(0x80000002)
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                        Break
                    }
                }
                Return(0x80000002)
            }
        }
        Scope(\_SB_.UAR1)
        {
            Name(UDP_, One)
        }
        PowerResource(PRI5, 0x5, 0x0)
        {
            Name(_DEP, Package(0x1)
            {
                \_SB_.GPIO
            })
            Name(PWI5, Zero)
            Method(_STA, 0x0, NotSerialized)
            {
                Return(PWI5)
            }
            Method(_ON_, 0x0, NotSerialized)
            {
                If(PWI5 == Zero)
                {
                    PWI5 = One
                    \_SB_.SPCC(One)
                }
            }
            Method(_OFF, 0x0, NotSerialized)
            {
                If(!(PWI5 == Zero))
                {
                    PWI5 = Zero
                    \_SB_.SPCC(Zero)
                }
            }
        }
        Scope(\_SB_.I2C5)
        {
            Name(_PR0, Package(0x1)
            {
                PRI5
            })
        }
        PowerResource(PRTC, 0x5, 0x0)
        {
            Name(PWT1, One)
            Method(_STA, 0x0, NotSerialized)
            {
                Return(PWT1)
            }
            Method(_ON_, 0x0, NotSerialized)
            {
                \_SB_.TGCH(0x2)
                PWT1 = One
            }
            Method(_OFF, 0x0, NotSerialized)
            {
                \_SB_.TGCH(0x2)
                PWT1 = Zero
            }
        }
    }
}
